<%- include('../partials/user/header.ejs') %>

<!-- Add Material Icons font -->
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

<style>
    .breadcrumb a,
    .breadcrumb span {
        display: inline-block;
        margin-right: 5px;
    }

    .breadcrumb .separator {
        margin: 0 8px;
        color: #999;
    }

    .card-body {
        padding: 1.25rem;
    }

    .card-header {
        padding: 1rem 1.25rem;
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .card-header h4 {
        margin: 0;
        font-size: 1.1rem;
        font-weight: 600;
    }

    .dropdown{
        position:relative;
        display:inline-block;
    }
    .dropdown-content{
        display: none;
        position: absolute;
        background-color: white;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgb(0,0,0,0,2);
        z-index: 1000;
        right: 0;
    }
    .dropdown-content a {
        color: black;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
        width: 100%;
    }
    .dropdown-content a:hover{
        background-color: #f1f1f1;
    }
    .dropdown:hover .dropdown-content{
        display:block;
    }
    .header{
        position: relative;
        z-index: 500;
    }

    /* Dashboard menu styles */
    .dashboard-menu .nav-link {
        display: flex;
        align-items: center;
        padding: 12px 15px;
        color: #666;
        transition: all 0.3s ease;
    }

    .dashboard-menu .nav-link i {
        margin-right: 10px;
        font-size: 20px;
    }

    .dashboard-menu .nav-link:hover,
    .dashboard-menu .nav-link.active {
        background-color: #f8f9fa;
        color: #3BB77E;
    }

    /* Form styles */
    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        font-weight: 500;
        margin-bottom: 0.5rem;
        color: #555;
    }

    .form-control {
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        padding: 0.625rem 0.75rem;
        transition: all 0.2s ease-in-out;
        background-color: #fff;
        font-size: 0.95rem;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    }

    .form-control:focus {
        border-color: #3BB77E;
        box-shadow: 0 0 0 1px rgba(59, 183, 126, 0.1);
        outline: none;
    }

    .form-select {
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        padding: 0.625rem 0.75rem;
        transition: all 0.2s ease-in-out;
        background-color: #fff;
        font-size: 0.95rem;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        cursor: pointer;
    }

    .form-select:focus {
        border-color: #3BB77E;
        box-shadow: 0 0 0 1px rgba(59, 183, 126, 0.1);
        outline: none;
    }

    .form-control::placeholder {
        color: #a0aec0;
    }

    .btn-fill-out {
        background-color: #3BB77E;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        transition: all 0.3s ease;
    }

    .btn-fill-out:hover {
        background-color: #2f9b6a;
        color: white;
    }

    .btn-outline-primary {
        color: #3BB77E;
        border: 1px solid #3BB77E;
        background-color: transparent;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        transition: all 0.3s ease;
    }

    .btn-outline-primary:hover {
        background-color: #3BB77E;
        color: white;
    }

    .address-type-badge {
        display: inline-block;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        font-size: 0.875rem;
        font-weight: 500;
        margin-right: 0.5rem;
    }

    .address-type-home {
        background-color: #e3f2fd;
        color: #1976d2;
    }

    .address-type-office {
        background-color: #f3e5f5;
        color: #7b1fa2;
    }

    .address-type-other {
        background-color: #e8f5e9;
        color: #388e3c;
    }

    .default-address-toggle {
        display: flex;
        align-items: center;
        margin-top: 1rem;
    }

    .default-address-toggle .form-check-input {
        margin-right: 0.5rem;
    }

    /* Custom radio button styles */
    .address-type-selector {
        margin-bottom: 1.5rem;
    }

    .address-type-selector .form-check {
        display: inline-block;
        margin-right: 2rem;
        position: relative;
    }

    .address-type-selector .form-check-input {
        width: 24px;
        height: 24px;
        margin-top: 0;
        border: 2px solid #dee2e6;
        cursor: pointer;
    }

    .address-type-selector .form-check-input:checked {
        background-color: #007bff;
        border-color: #007bff;
    }

    .address-type-selector .form-check-label {
        padding-left: 0.5rem;
        font-size: 0.95rem;
        cursor: pointer;
        color: #666;
    }

    .address-type-selector .form-check-input:checked ~ .form-check-label {
        color: #333;
    }

    /* phind */

    .invalid-feedback {
    display: block;
    margin-top: 0.25rem;
    font-size: 0.875rem;
    color: #dc3545;
}

.is-invalid {
    border-color: #dc3545;
    padding-right: calc(1.5rem + 1.5625rem);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3E%3Ccircle cx='6' cy='6' r='4.5'/%3E%3Cpath d='M6 7l2 2 2-2M6 7l-2 2-2-2'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right calc(0.375rem + 0.1875rem) center;
    background-size: calc(0.75rem + 0.375rem) calc(0.75rem + 0.375rem);
}

.form-control:focus:not(:placeholder-shown):invalid {
    border-color: #dc3545;
    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}
</style>

<header class="header-area header-style-1 header-height-2">
    <div class="header-top header-top-ptb-1 d-none d-lg-block">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-xl-3 col-lg-4">
                    <div class="header-info">
                        <ul>
                            <li><i class="fi-ss-smartphone"></i> <a href="#">(+01) - 2345 - 6789</a></li>
                            <!-- <li><i class="fi-ss-marker"></i><a href="/contact">Our location</a></li> -->
                        </ul>
                    </div>
                </div>
                <div class="col-xl-6 col-lg-4">
                    <div class="text-center">
                    </div>
                </div>
                <div class="col-xl-3 col-lg-4">
                    <div class="header-info header-info-right">
                        <ul>
                            <li>
                                <a class="language-dropdown-active" href="#"> 
                                    <i class="fi-ss-world"></i> English <i class="fi-ss-angle-small-down"></i>
                                </a>
                                <ul class="language-dropdown">
                                    <li><a href="#"><img src="assets2/imgs/theme/flag-fr.png" alt="">Français</a></li>
                                    <li><a href="#"><img src="assets2/imgs/theme/flag-dt.png" alt="">Deutsch</a></li>
                                    <li><a href="#"><img src="assets2/imgs/theme/flag-ru.png" alt="">Pусский</a></li>
                                </ul>
                            </li>
                            <% if (typeof user !== 'undefined' && user) { %>
                                <div class="dropdown">
                                    <a href="#" class="sign-in-link"><%= user.name %></a>
                                    <div class="dropdown-content">
                                        <a href="/profileinfo">Profile</a>
                                        <a href="/logout">Logout</a>
                                    </div>
                                </div>
                            <% } else { %>
                                <li><i class="fi-rs-user"></i><a href="/signup">Log in/Sign Up</a></li>
                            <% } %>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="header-middle header-middle-ptb-1 d-none d-lg-block">
        <div class="container">
            <div class="header-wrap">
                <div class="logo logo-width-1">
                   <!-- <img src="/assets/imgs/theme/shoestore-logo.svg" alt="logo"> -->
                </div>
                <div class="header-right">
                    <!-- <div class="search-style-2">
                        <form action="/search" method="get">
                            <input type="text" placeholder="Search for items..." name="query">
                        </form> -->
                    </div>
                    <div class="header-action-right">
                        <div class="header-action-2">
                            <div class="header-action-icon-2">
                                <a href="/wishlist">
                                    <img class="svgInject" alt="Evara" src="assets/imgs/theme/icons/icon-heart.svg">
                                    <!-- <span class="pro-count blue">0</span> -->
                                </a>
                            </div>
                            <div class="header-action-icon-2">
                                <a class="mini-cart-icon" href="/cart">
                                    <img alt="Evara" src="assets/imgs/theme/icons/icon-cart.svg">
                                    <!-- <span class="pro-count blue">0</span> -->
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="header-bottom header-bottom-bg-color sticky-bar">
        <div class="container">
            <div class="header-wrap header-space-between position-relative">
                <div class="logo logo-width-1 d-block d-lg-none">
                    <a href="/"><img src="/assets/imgs/theme/shoestore-logo.svg" alt="logo"></a>
                </div>
                <div class="header-nav d-none d-lg-flex">
                    <div class="main-menu main-menu-padding-1 main-menu-lh-2 d-none d-lg-block">
                        <nav>
                            <ul>
                                <li><a href="/">Home</a></li>
                                <li><a href="/shop">Shop</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
                <div class="hotline d-none d-lg-block">
                    <p><i class="fi-ss-headset"></i><span>Hotline</span> 1900 - 888 </p>
                </div>   
                <div class="header-action-icon-2 d-block d-lg-none">
                    <div class="burger-icon burger-icon-white">
                        <span class="burger-icon-top"><span></span><span></span><span></span></span>
                        <span class="burger-icon-mid"><span></span><span></span><span></span></span>
                        <span class="burger-icon-bottom"><span></span><span></span><span></span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="mobile-header-active mobile-header-wrapper-style perfect-scrollbar">
    <div class="mobile-header-wrapper-inner">
        <div class="mobile-header-content-area">
            <div class="perfect-scroll">
                <div class="mobile-menu-wrap mobile-header-border">
                    <nav>
                        <ul class="mobile-menu font-heading">
                            <li><a class="active" href="/">Home</a></li>
                            <li><a href="/shop">Shop</a></li>
                         
                        </ul>
                    </nav>
                </div>
                <div class="mobile-account">
                    <h6 class="mb-10px">My Account</h6>
                    <ul class="mobile-menu font-heading">
                        <li><a href="/profileinfo">Profile</a></li>
                        <li><a href="/myorders">My Orders</a></li>
                        <li><a href="/addresses">My Addresses</a></li>
                        <li><a href="/wishlist">Wishlist</a></li>
                        <li><a href="/wallet">My Wallet</a></li>
                        <li><a href="/logout">Logout</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span></span> <a href="/addresses">My Addresses</a>
                <span></span> Add New Address
            </div>
        </div>
    </div>

    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <div class="dashboard-menu">
                        <ul class="nav flex-column" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link" href="/profileinfo">
                                    <i class="fi-rs-user-check"></i> Personal Information
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/myorders">
                                    <i class="fi-rs-shopping-cart"></i> My Orders
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active" href="/addresses">
                                    <i class="fi-rs-marker"></i> My Addresses
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/wishlist">
                                    <i class="fi-rs-heart"></i> Wishlist
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/wallet">
                                    <i class="fi-rs-credit-card"></i> My Wallet
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/security">
                                    <i class="fi-rs-shield-check"></i> Security Settings
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/logout">
                                    <i class="fi-rs-exit"></i> Logout
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-9">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h3 class="mb-0">Add New Address</h3>
                        </div>
                        <div class="card-body">
                            <!-- Remove enctype or set it to application/x-www-form-urlencoded -->
<form action="/addAddresses" class="form" id="addressForm" method="POST">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="name" class="form-label">Full Name</label>
                <input type="text" class="form-control" id="name" name="name" required>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="phone" class="form-label">Phone Number</label>
                <input type="tel" class="form-control" id="phone" name="phone" required>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="altPhone" class="form-label">Alternative Phone (Optional)</label>
                <input type="tel" class="form-control" id="altPhone" name="altPhone">
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="landmark" class="form-label">Landmark (Optional)</label>
                <input type="text" class="form-control" id="landmark" name="landmark">
            </div>
        </div>
    </div>

    <div class="form-group">
        <label for="addressLine1" class="form-label">Address Line 1</label>
        <input type="text" class="form-control" id="addressLine1" name="addressLine1" required>
    </div>

    <div class="form-group">
        <label for="addressLine2" class="form-label">Address Line 2 (Optional)</label>
        <input type="text" class="form-control" id="addressLine2" name="addressLine2">
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="city" class="form-label">City</label>
                <input type="text" class="form-control" id="city" name="city" required>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="state" class="form-label">State</label>
                <select class="form-select" id="state" name="state" required>
                    <option value="">Select State</option>
                    <option value="Andhra Pradesh">Andhra Pradesh</option>
                    <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                    <option value="Assam">Assam</option>
                    <option value="Bihar">Bihar</option>
                    <option value="Chhattisgarh">Chhattisgarh</option>
                    <option value="Goa">Goa</option>
                    <option value="Gujarat">Gujarat</option>
                    <option value="Haryana">Haryana</option>
                    <option value="Himachal Pradesh">Himachal Pradesh</option>
                    <option value="Jharkhand">Jharkhand</option>
                    <option value="Karnataka">Karnataka</option>
                    <option value="Kerala">Kerala</option>
                    <option value="Madhya Pradesh">Madhya Pradesh</option>
                    <option value="Maharashtra">Maharashtra</option>
                    <option value="Manipur">Manipur</option>
                    <option value="Meghalaya">Meghalaya</option>
                    <option value="Mizoram">Mizoram</option>
                    <option value="Nagaland">Nagaland</option>
                    <option value="Odisha">Odisha</option>
                    <option value="Punjab">Punjab</option>
                    <option value="Rajasthan">Rajasthan</option>
                    <option value="Sikkim">Sikkim</option>
                    <option value="Tamil Nadu">Tamil Nadu</option>
                    <option value="Telangana">Telangana</option>
                    <option value="Tripura">Tripura</option>
                    <option value="Uttar Pradesh">Uttar Pradesh</option>
                    <option value="Uttarakhand">Uttarakhand</option>
                    <option value="West Bengal">West Bengal</option>
                    <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
                    <option value="Chandigarh">Chandigarh</option>
                    <option value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and Daman and Diu</option>
                    <option value="Delhi">Delhi</option>
                    <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                    <option value="Ladakh">Ladakh</option>
                    <option value="Lakshadweep">Lakshadweep</option>
                    <option value="Puducherry">Puducherry</option>
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="pincode" class="form-label">Postal Code</label>
                <input type="text" class="form-control" id="pincode" name="pincode" required>
            </div>
        </div>
    </div>
    <input type="hidden" id="redirect" value="<%=redirect %>" name="redirect">

    <div class="form-group address-type-selector">
        <label class="form-label">Address Type</label>
        <div class="mt-2">
            <div class="form-check">
                <input type="radio" class="form-check-input" name="addressType" id="addressTypeHome" value="Home" checked>
                <label for="addressTypeHome" class="form-check-label">Home</label>
            </div>
            <div class="form-check">
                <input type="radio" class="form-check-input" name="addressType" id="addressTypeOffice" value="Office">
                <label for="addressTypeOffice" class="form-check-label">Office</label>
            </div>
            <div class="form-check">
                <input type="radio" class="form-check-input" name="addressType" id="addressTypeOther" value="Other">
                <label for="addressTypeOther" class="form-check-label">Other</label>
            </div>
        </div>
    </div>

    <div class="default-address-toggle">
        <input type="checkbox" class="form-check-input" id="defaultAddress" name="defaultAddress">
        <label for="defaultAddress" class="form-check-label">Set as default address</label>
    </div>

    <div class="mt-4">
        <button type="submit" class="btn btn-fill-out">Save Address</button>
        <a href="/addresses" class="btn btn-outline-primary ms-2">Cancel</a>
    </div>
</form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<%- include('../partials/user/footer.ejs') %>

<script>

// document.addEventListener('DOMContentLoaded', function () {
//     const form = document.querySelector('form');

//     const validationStates = {
//         name: { valid: true, message: '' },
//         phone: { valid: true, message: '' },
//         altPhone: { valid: true, message: '' },
//         addressLine1: { valid: true, message: '' },
//         city: { valid: true, message: '' },
//         state: { valid: true, message: '' },
//         pincode: { valid: true, message: '' }
//     };

//     const validators = {
//         name: value => value.length >= 3,
//         phone: value => /^[6789]\d{9}$/.test(value),
//         altPhone: value => !value || /^[6789]\d{9}$/.test(value),
//         pincode: value => /^\d{6}$/.test(value)
//     };

//     function updateValidationState(field, isValid, message) {
//         const element = document.getElementById(field);
//         if (!element) return;

//         const errorElement = element.nextElementSibling;
//         if (!errorElement || !errorElement.classList.contains('invalid-feedback')) {
//             if (!isValid && message) {
//                 const errorDiv = document.createElement('div');
//                 errorDiv.className = 'invalid-feedback';
//                 errorDiv.textContent = message;
//                 element.parentElement.appendChild(errorDiv);
//             }
//             return;
//         }

//         errorElement.textContent = message;
//         element.classList.toggle('is-invalid', !isValid);
//         validationStates[field].valid = isValid;
//         validationStates[field].message = message;
//     }

//     ['name', 'phone', 'altPhone', 'addressLine1', 'city', 'state', 'pincode'].forEach(field => {
//         const element = document.getElementById(field);
//         if (!element) return;

//         element.addEventListener('input', function () {
//             const validator = validators[field];
//             let isValid = true;
//             let message = '';

//             if (validator && !validator(this.value)) {
//                 isValid = false;
//                 switch (field) {
//                     case 'name':
//                         message = 'Name must be at least 3 characters long';
//                         break;
//                     case 'phone':
//                     case 'altPhone':
//                         message = 'Please enter a valid 10-digit phone number starting with 6, 7, 8, or 9';
//                         break;
//                     case 'pincode':
//                         message = 'Please enter a valid 6-digit postal code';
//                         break;
//                 }
//             }

//             updateValidationState(field, isValid, message);
//         });
//     });

//     form.addEventListener('submit', async function (e) {
//         e.preventDefault(); 

//         let isValidForm = true;

//         ['name', 'phone', 'addressLine1', 'city', 'state', 'pincode'].forEach(field => {
//             const element = document.getElementById(field);
//             const validator = validators[field];

//             if (!validator || !validator(element.value)) {
//                 isValidForm = false;
//                 updateValidationState(
//                     field,
//                     false,
//                     field === 'name' ?
//                         'Name must be at least 3 characters long' :
//                         field === 'phone' || field === 'altPhone' ?
//                             'Please enter a valid 10-digit phone number starting with 6, 7, 8, or 9' :
//                             field === 'pincode' ?
//                                 'Please enter a valid 6-digit postal code' :
//                                 ''
//                 );
//             }
//         });

//         const addressTypeChecked = document.querySelector('input[name="details[0][addressType]"]:checked');
//         if (!addressTypeChecked) {
//             isValidForm = false;
//             updateValidationState('addressType', false, 'Please select an address type');
//         }

//         if (!isValidForm) {
//             document.querySelector('.card-body').scrollIntoView({ behavior: 'smooth' });
//             return;
//         }

//         try {
//             const res = await fetch('/addAddresses', {
//                 method: 'POST',
//                 body: new FormData(form)
//             });

//             const data = await res.json();

//             Swal.fire({
//                 icon: res.ok ? "success" : "error",
//                 text: data.message || data.error || (res.ok ? "Address added successfully!" : "Failed to add address"),
//                 timer: 1500,
//                 showConfirmButton: false
//             });

//         } catch (err) {
//             Swal.fire({
//                 icon: "error",
//                 text: "An error occurred while submitting the form.",
//                 timer: 1500,
//                 showConfirmButton: false
//             });
//         }
//     });
// });
document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form');

    const validationStates = {
        name: { valid: true, message: '' },
        phone: { valid: true, message: '' },
        altPhone: { valid: true, message: '' },
        addressLine1: { valid: true, message: '' },
        city: { valid: true, message: '' },
        state: { valid: true, message: '' },
        pincode: { valid: true, message: '' }
    };

    const validators = {
        name: value => value.trim().length >= 3,
        phone: value => /^[6789]\d{9}$/.test(value.trim()),
        altPhone: value => !value.trim() || /^[6789]\d{9}$/.test(value.trim()),
        addressLine1: value => value.trim().length >= 5,
        city: value => value.trim().length >= 2,
        state: value => value.trim().length >= 2,
        pincode: value => /^\d{6}$/.test(value.trim())
    };

    function updateValidationState(field, isValid, message) {
        const element = document.getElementById(field);
        if (!element) return;

        let errorElement = element.parentElement.querySelector('.invalid-feedback');
        
        if (!errorElement) {
            errorElement = document.createElement('div');
            errorElement.className = 'invalid-feedback';
            element.parentElement.appendChild(errorElement);
        }

        errorElement.textContent = message;
        element.classList.toggle('is-invalid', !isValid);
        validationStates[field].valid = isValid;
        validationStates[field].message = message;
    }

    function validateField(field, value) {
        const validator = validators[field];
        let isValid = true;
        let message = '';

        if (field === 'state') {
            isValid = value.trim().length > 0;
            message = isValid ? '' : 'Please select a state';
        } else if (validator && !validator(value)) {
            isValid = false;
            switch (field) {
                case 'name':
                    message = 'Name must be at least 3 characters long';
                    break;
                case 'phone':
                    message = 'Please enter a valid 10-digit phone number starting with 6, 7, 8, or 9';
                    break;
                case 'altPhone':
                    message = 'Please enter a valid 10-digit phone number starting with 6, 7, 8, or 9';
                    break;
                case 'addressLine1':
                    message = 'Address must be at least 5 characters long';
                    break;
                case 'city':
                    message = 'City must be at least 2 characters long';
                    break;
                case 'pincode':
                    message = 'Please enter a valid 6-digit postal code';
                    break;
            }
        }

        updateValidationState(field, isValid, message);
        return isValid;
    }

    // Add real-time validation
    ['name', 'phone', 'altPhone', 'addressLine1', 'city', 'state', 'pincode'].forEach(field => {
        const element = document.getElementById(field);
        if (!element) return;

        element.addEventListener('input', function () {
            validateField(field, this.value);
        });

        element.addEventListener('blur', function () {
            validateField(field, this.value);
        });
    });

    form.addEventListener('submit', async function (e) {
        e.preventDefault();

        let isValidForm = true;

        // Validate all required fields
        const requiredFields = ['name', 'phone', 'addressLine1', 'city', 'state', 'pincode'];
        requiredFields.forEach(field => {
            const element = document.getElementById(field);
            if (!element) return;
            
            const isValid = validateField(field, element.value);
            if (!isValid) {
                isValidForm = false;
            }
        });

        // Validate optional alt phone if provided
        const altPhone = document.getElementById('altPhone');
        if (altPhone && altPhone.value.trim()) {
            const isValid = validateField('altPhone', altPhone.value);
            if (!isValid) {
                isValidForm = false;
            }
        }

        // Check if address type is selected - FIXED: Using correct name attribute
        const addressTypeChecked = document.querySelector('input[name="addressType"]:checked');
        if (!addressTypeChecked) {
            isValidForm = false;
            // Show error for address type
            const addressTypeContainer = document.querySelector('.address-type-selector');
            let errorElement = addressTypeContainer.querySelector('.invalid-feedback');
            if (!errorElement) {
                errorElement = document.createElement('div');
                errorElement.className = 'invalid-feedback';
                addressTypeContainer.appendChild(errorElement);
            }
            errorElement.textContent = 'Please select an address type';
            errorElement.style.display = 'block';
        }

        if (!isValidForm) {
            // Scroll to first error field
            const firstInvalidField = document.querySelector('.is-invalid');
            if (firstInvalidField) {
                firstInvalidField.scrollIntoView({ behavior: 'smooth', block: 'center' });
                firstInvalidField.focus();
            }
            return;
        }

        // Show loading state
        const submitButton = form.querySelector('button[type="submit"]');
        const originalText = submitButton.textContent;
        submitButton.textContent = 'Saving...';
        submitButton.disabled = true;

        try {
            const formData = new FormData(form);
            
            const response = await fetch('/addAddresses', {
                method: 'POST',
                body: formData
            });

            const data = await response.json();

            if (response.ok && data.success) {
                // Success
                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        icon: "success",
                        title: "Success!",
                        text: data.message || "Address added successfully!",
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        if (data.redirect) {
                            window.location.href = data.redirect;
                        } else {
                            window.location.href = '/addresses';
                        }
                    });
                } else {
                    alert(data.message || "Address added successfully!");
                    window.location.href = '/addresses';
                }
            } else {
                // Error
                if (typeof Swal !== 'undefined') {
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: data.message || "Failed to add address",
                        timer: 3000,
                        showConfirmButton: true
                    });
                } else {
                    alert(data.message || "Failed to add address");
                }
            }

        } catch (error) {
            console.error('Error:', error);
            if (typeof Swal !== 'undefined') {
                Swal.fire({
                    icon: "error",
                    title: "Error!",
                    text: "An error occurred while submitting the form.",
                    timer: 3000,
                    showConfirmButton: true
                });
            } else {
                alert("An error occurred while submitting the form.");
            }
        } finally {
            // Reset button state
            submitButton.textContent = originalText;
            submitButton.disabled = false;
        }
    });

    // Clear address type error when selection changes - FIXED: Using correct name attribute
    document.querySelectorAll('input[name="addressType"]').forEach(radio => {
        radio.addEventListener('change', function() {
            const addressTypeContainer = document.querySelector('.address-type-selector');
            const errorElement = addressTypeContainer.querySelector('.invalid-feedback');
            if (errorElement) {
                errorElement.style.display = 'none';
            }
        });
    });
});