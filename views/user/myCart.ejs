
<%- include('../partials/user/header.ejs') %>

<!-- Add Material Icons font -->
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

<style>
    .breadcrumb a,
    .breadcrumb span {
        display: inline-block;
        margin-right: 5px;
    }

    .breadcrumb .separator {
        margin: 0 8px;
        color: #999;
    }

    .card-body {
        padding: 1.25rem;
    }

    .card-header {
        padding: 1rem 1.25rem;
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .card-header h4 {
        margin: 0;
        font-size: 1.1rem;
        font-weight: 600;
    }

    .dropdown{
        position:relative;
        display:inline-block;
    }
    .dropdown-content{
        display: none;
        position: absolute;
        background-color: white;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgb(0,0,0,0,2);
        z-index: 1000;
        right: 0;
    }
    .dropdown-content a {
        color: black;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
        width: 100%;
    }
    .dropdown-content a:hover{
        background-color: #f1f1f1;
    }
    .dropdown:hover .dropdown-content{
        display:block;
    }
    .header{
        position: relative;
        z-index: 500;
    }

    /* Dashboard menu styles */
    .dashboard-menu .nav-link {
        display: flex;
        align-items: center;
        padding: 12px 15px;
        color: #666;
        transition: all 0.3s ease;
    }

    .dashboard-menu .nav-link i {
        margin-right: 10px;
        font-size: 20px;
    }

    .dashboard-menu .nav-link:hover,
    .dashboard-menu .nav-link.active {
        background-color: #f8f9fa;
        color: #3BB77E;
    }

    /* Cart styles */
    .cart-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        margin-bottom: 1.5rem;
    }

    .cart-table th {
        background-color: #f8f9fa;
        padding: 0.75rem;
        font-weight: 600;
        color: #333;
        border-bottom: 1px solid #dee2e6;
        text-align: left;
    }

    .cart-table td {
        padding: 1rem 0.75rem;
        vertical-align: middle;
        border-bottom: 1px solid #dee2e6;
    }

    .cart-table tr:last-child td {
        border-bottom: none;
    }

    .cart-item-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
    }

    .cart-item-details {
        padding-left: 1rem;
    }

    .cart-item-name {
        font-weight: 600;
        font-size: 1rem;
        margin-bottom: 0.25rem;
        color: #333;
    }

    .cart-item-price {
        color: #3BB77E;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .cart-item-remove {
        color: #dc3545;
        cursor: pointer;
    }

    .cart-quantity {
        display: flex;
        align-items: center;
        width: 120px;
    }

    .cart-quantity-btn {
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        cursor: pointer;
    }

    .cart-quantity-input {
        width: 60px;
        height: 30px;
        text-align: center;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        margin: 0 0.5rem;
    }

    .cart-summary {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 1.5rem;
        margin-top: 2rem;
    }

    .cart-summary-title {
        font-weight: 600;
        font-size: 1.1rem;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #dee2e6;
    }

    .cart-summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.75rem;
    }

    .cart-summary-row:last-child {
        margin-bottom: 0;
        padding-top: 0.75rem;
        border-top: 1px solid #dee2e6;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .cart-summary-label {
        color: #6c757d;
    }

    .cart-summary-value {
        font-weight: 500;
    }

    .cart-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 1.5rem;
    }

    .cart-empty {
        text-align: center;
        padding: 3rem 1rem;
    }

    .cart-empty i {
        font-size: 4rem;
        color: #dee2e6;
        margin-bottom: 1.5rem;
    }

    .cart-empty h3 {
        font-weight: 600;
        margin-bottom: 1rem;
        color: #333;
    }

    .cart-empty p {
        color: #6c757d;
        margin-bottom: 1.5rem;
    }

    .cart-coupon {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid #dee2e6;
    }

    .cart-coupon-title {
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .cart-coupon-form {
        display: flex;
    }

    .cart-coupon-input {
        flex-grow: 1;
        padding: 0.5rem;
        border: 1px solid #dee2e6;
        border-radius: 4px 0 0 4px;
    }

    .cart-coupon-btn {
        padding: 0.5rem 1rem;
        background-color: #3BB77E;
        color: white;
        border: none;
        border-radius: 0 4px 4px 0;
        cursor: pointer;
    }

    .cart-update-btn {
        padding: 0.5rem 1rem;
        background-color: #f8f9fa;
        color: #333;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        cursor: pointer;
    }

    .cart-checkout-btn {
        padding: 0.75rem 1.5rem;
        background-color: #3BB77E;
        color: white;
        border: none;
        border-radius: 4px;
        font-weight: 600;
        cursor: pointer;
    }

    .cart-continue-shopping {
        color: #3BB77E;
        text-decoration: none;
        font-weight: 500;
    }

    .cart-item-variant {
        font-size: 0.85rem;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    .cart-item-variant span {
        font-weight: 500;
    }
    
</style>

<header class="header-area header-style-1 header-height-2">
    <div class="header-top header-top-ptb-1 d-none d-lg-block">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-xl-3 col-lg-4">
                    <div class="header-info">
                        <ul>
                        </ul>
                    </div>
                </div>
                <div class="col-xl-6 col-lg-4">
                    <div class="text-center">
                    </div>
                </div>
                <div class="col-xl-3 col-lg-4">
                    <div class="header-info header-info-right">
                        <ul>
                            <li>
                                <a class="language-dropdown-active" href="#"> 
                                    <i class="fi-rs-world"></i> English <i class="fi-rs-angle-small-down"></i>
                                </a>
                                <ul class="language-dropdown">
                                    <li><a href="#"><img src="assets/imgs/theme/flag-fr.png" alt="">Français</a></li>
                                    <li><a href="#"><img src="assets/imgs/theme/flag-dt.png" alt="">Deutsch</a></li>
                                    <li><a href="#"><img src="assets/imgs/theme/flag-ru.png" alt="">Pусский</a></li>
                                </ul>
                            </li>
                            <% if (typeof user !== 'undefined' && user) { %>
                                <div class="dropdown">
                                    <a href="#" class="sign-in-link"><%= user.name %></a>
                                    <div class="dropdown-content">
                                        <a href="/profileinfo">Profile</a>
                                        <a href="/logout">Logout</a>
                                    </div>
                                </div>
                            <% } else { %>
                                <li><i class="fi-rs-user"></i><a href="/signup">Log in/Sign Up</a></li>
                            <% } %>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="header-middle header-middle-ptb-1 d-none d-lg-block">
        <div class="container">
            <div class="header-wrap">
                <div class="logo logo-width-1">
                   <!-- <img src="/assets/imgs/theme/shoestore-logo.svg" alt="logo"> -->
                </div>
                <div class="header-right">
                    <div class="search-style-2">
                        <!-- <form action="/search" method="get">
                            <input type="text" placeholder="Search for items..." name="query">
                        </form> -->
                    </div>
                    <div class="header-action-right">
                        <div class="header-action-2">
                            <div class="header-action-icon-2">
                                <a href="/wishlist">
                                    <i class="fi-rs-heart wishlist-heart"></i>
                                    <!-- <img class="svgInject" alt="Evara" src="assets/imgs/theme/icons/icon-heart.svg">
                                    <span class="pro-count blue">0</span> -->
                                </a>
                            </div>
                            <div class="header-action-icon-2">
                                <a class="mini-cart-icon" href="/cart">
                                    <i class="fi-rs-shopping-cart"></i>
                                    <!-- <img alt="Evara" src="assets/imgs/theme/icons/icon-cart.svg"> -->
                                    <!-- <span class="pro-count blue"><%= items.length %> Item<%= items.length !== 1 ? 's' : '' %></span> -->
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="header-bottom header-bottom-bg-color sticky-bar">
        <div class="container">
            <div class="header-wrap header-space-between position-relative">
                <div class="logo logo-width-1 d-block d-lg-none">
                    <a href="/"><img src="/assets/imgs/theme/shoestore-logo.svg" alt="logo"></a>
                </div>
                <div class="header-nav d-none d-lg-flex">
                    <div class="main-menu main-menu-padding-1 main-menu-lh-2 d-none d-lg-block">
                        <nav>
                            <ul>
                                <li><a href="/">Home</a></li>
                                <li><a href="/shop">Shop</a></li>
                            </ul>
                        </nav>
                    </div>
                </div>
                <div class="hotline d-none d-lg-block">
                    
                </div>   
                <div class="header-action-icon-2 d-block d-lg-none">
                    <div class="burger-icon burger-icon-white">
                        <span class="burger-icon-top"><span></span><span></span><span></span></span>
                        <span class="burger-icon-mid"><span></span><span></span><span></span></span>
                        <span class="burger-icon-bottom"><span></span><span></span><span></span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="mobile-header-active mobile-header-wrapper-style perfect-scrollbar">
    <div class="mobile-header-wrapper-inner">
        <div class="mobile-header-content-area">
            <div class="perfect-scroll">
                <div class="mobile-menu-wrap mobile-header-border">
                    <nav>
                        <ul class="mobile-menu font-heading">
                            <li><a class="active" href="/">Home</a></li>
                            <li><a href="/about">About</a></li>
                            <li><a href="/shop">Shop</a></li>
                            <li><a href="/offers">Deals</a></li>
                            <li><a href="/contact">Contact</a></li>
                        </ul>
                    </nav>
                </div>
                <div class="mobile-account">
                    <h6 class="mb-10px">My Account</h6>
                    <ul class="mobile-menu font-heading">
                        <li><a href="/profileinfo">Profile</a></li>
                        <li><a href="/myorders">My Orders</a></li>
                        <li><a href="/addresses">My Addresses</a></li>
                        <li><a href="/wishlist">Wishlist</a></li>
                        <li><a href="/wallet">My Wallet</a></li>
                        <li><a href="/logout">Logout</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span class="separator">/</span> Shopping Cart
            </div>
        </div>
    </div>

<section class="mt-50 mb-50">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">Shopping Cart</h4>
                        <span class="badge bg-primary"><%= items.length %> Item<%= items.length !== 1 ? 's' : '' %></span>
                    </div>
                    <div class="card-body">
                        <% if (items.length > 0) { %>
                            <!-- Stock validation alerts -->
                            <% 
                            let outOfStockItems = [];
                            let lowStockItems = [];
                            items.forEach(item => {
                                let stockAvailable = 0;
                                if (item.productId && item.productId.shoeSizes) {
                                    const sizeKey = item.variants.size.toLowerCase();
                                    stockAvailable = item.productId.shoeSizes.get(sizeKey) || 0;
                                }
                                
                                if (stockAvailable === 0) {
                                    outOfStockItems.push({
                                        name: item.name,
                                        size: item.variants.size,
                                        quantity: item.quantity
                                    });
                                } else if (item.quantity > stockAvailable) {
                                    lowStockItems.push({
                                        name: item.name,
                                        size: item.variants.size,
                                        quantity: item.quantity,
                                        stock: stockAvailable
                                    });
                                }
                            });
                            %>
                            
                            <% if (outOfStockItems.length > 0) { %>
                                <div class="alert alert-danger" role="alert">
                                    <strong>⚠️ Out of Stock Items:</strong>
                                    <ul class="mb-0 mt-2">
                                        <% outOfStockItems.forEach(item => { %>
                                            <li><strong><%= item.name %></strong> (Size: <%= item.size.toUpperCase() %>) - This item is currently out of stock. Please remove it to continue.</li>
                                        <% }) %>
                                    </ul>
                                    <small class="text-muted">You cannot proceed to checkout until these items are removed from your cart.</small>
                                </div>
                            <% } %>
                            
                            <% if (lowStockItems.length > 0) { %>
                                <div class="alert alert-warning" role="alert">
                                    <strong>⚠️ Limited Stock Items:</strong>
                                    <ul class="mb-0 mt-2">
                                        <% lowStockItems.forEach(item => { %>
                                            <li><strong><%= item.name %></strong> (Size: <%= item.size.toUpperCase() %>) - You have <%= item.quantity %> in cart but only <%= item.stock %> available. Please reduce quantity to <%= item.stock %> or less.</li>
                                        <% }) %>
                                    </ul>
                                    <small class="text-muted">Please adjust quantities to continue to checkout.</small>
                                </div>
                            <% } %>

                            <!-- Cart with items -->
                            <div class="cart-with-items">
                                <table class="cart-table">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Price</th>
                                            <th>Size</th>
                                            <th>Quantity</th>
                                            <th>Total</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% items.forEach(item => { %>
                                            <% 
                                            // Get stock for this size
                                            let stockAvailable = 0;
                                            if (item.productId && item.productId.shoeSizes) {
                                                const sizeKey = item.variants.size.toLowerCase();
                                                stockAvailable = item.productId.shoeSizes.get(sizeKey) || 0;
                                            }
                                            
                                            // Check stock status
                                            let isOutOfStock = stockAvailable === 0;
                                            let isOverStock = item.quantity > stockAvailable;
                                            let rowClass = '';
                                            if (isOutOfStock) rowClass = 'table-danger';
                                            else if (isOverStock) rowClass = 'table-warning';
                                            %>
                                            <tr class="cart-item-row <%= rowClass %>" data-price="<%= item.price %>" data-stock="<%= stockAvailable %>">
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <img src="<%= item.productImage %>" alt="<%= item.name %>" class="cart-item-image" />
                                                        <div class="cart-item-details">
                                                            <div class="cart-item-name"><%= item.name %></div>
                                                            <small class="text-muted">
                                                                Stock: <%= stockAvailable %>
                                                                <% if (isOutOfStock) { %>
                                                                    <span class="badge bg-danger ms-1">OUT OF STOCK</span>
                                                                <% } else if (isOverStock) { %>
                                                                    <span class="badge bg-warning ms-1">EXCEEDS STOCK</span>
                                                                <% } else if (stockAvailable <= 5) { %>
                                                                    <span class="badge bg-warning ms-1">LOW STOCK</span>
                                                                <% } %>
                                                            </small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="item-price">₹<%= item.price.toFixed(2) %></td>
                                                <td class="item-size">
                                                    <%= item.variants && item.variants.size ? item.variants.size.toUpperCase() : 'N/A' %>
                                                </td>
                                                <td>
                                                    <div class="cart-quantity">
                                                        <button type="button" class="cart-quantity-btn decrease-btn" data-id="<%= item._id %>" <% if (isOutOfStock) { %>disabled<% } %>>-</button>
                                                        <input type="number" name="quantity" class="cart-quantity-input" value="<%= item.quantity %>" min="1" max="<%= Math.max(1, stockAvailable) %>" data-id="<%= item._id %>" <% if (isOutOfStock) { %>disabled<% } %> />
                                                        <button type="button" class="cart-quantity-btn increase-btn" data-id="<%= item._id %>" <% if (isOutOfStock || item.quantity >= stockAvailable) { %>disabled<% } %>>+</button>
                                                    </div>
                                                </td>
                                                <td class="item-total">₹<%= (item.price * item.quantity).toFixed(2) %></td>
                                                <td>
                                                    <form action="/cart/remove?_method=DELETE" method="POST">
                                                        <input type="hidden" name="itemId" value="<%= item._id %>" />
                                                        <button type="submit" class="cart-item-remove" onclick="removeFromCart('<%= item._id %>')">
                                                            <i class="fi-rs-trash"></i>
                                                        </button>
                                                    </form>
                                                </td>
                                            </tr>
                                        <% }) %>
                                    </tbody>
                                </table>

                                <div class="cart-actions mt-4 d-flex justify-content-between">
                                    <a href="/shop" class="cart-continue-shopping">
                                        <i class="fi-rs-arrow-left"></i> Continue Shopping
                                    </a>
                                </div>

                                <div class="cart-coupon">
                                    <div class="cart-coupon-title">
                                        <!-- Have a Coupon? -->
                                    </div>
                                    <div class="cart-coupon-form">
                                        <!-- <input type="text" class="cart-coupon-input" 
                                        placeholder="Enter coupon code" 
                                        /> -->
                                        <button class="cart-coupon-btn">
                                            <!-- Apply -->
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% } else { %>
                            <!-- Empty cart -->
                            <div class="cart-empty">
                                <i class="material-icons">shopping_cart</i>
                                <h3>Your cart is empty</h3>
                                <p>Looks like you haven't added any items to your cart yet.</p>
                                <a href="/shop" class="btn btn-fill-out">Start Shopping</a>
            </div>
                        <% } %>
                    </div>
                </div>
            </div>
            
            <% if (items.length > 0) { %>
                <% const subtotal = items.reduce((sum, i) => sum + i.price * i.quantity, 0); %>
                <% const shipping = 10; %>
                <% const tax = subtotal * 0.05; %>
                <% const total = subtotal + shipping + tax; %>
                
                <!-- Check if checkout should be disabled -->
                <% 
                let canCheckout = true;
                items.forEach(item => {
                    let stockAvailable = 0;
                    if (item.productId && item.productId.shoeSizes) {
                        const sizeKey = item.variants.size.toLowerCase();
                        stockAvailable = item.productId.shoeSizes.get(sizeKey) || 0;
                    }
                    
                    if (stockAvailable === 0 || item.quantity > stockAvailable) {
                        canCheckout = false;
                    }
                });
                %>
            
                <div class="col-lg-4">
                    <div class="card">
                        <div class="card-body cart-summary">
                            <div class="cart-summary-title">Order Summary</div>
                            <div class="cart-summary-row">
                                <div class="cart-summary-label">Subtotal</div>
                                <div class="cart-summary-value subtotal">₹<%= subtotal.toFixed(2) %></div>
                            </div>
                            <div class="cart-summary-row">
                                <div class="cart-summary-label">Shipping</div>
                                <div class="cart-summary-value shipping">₹<%= shipping.toFixed(2) %></div>
                            </div>
                            <div class="cart-summary-row">
                                <div class="cart-summary-label">Tax (5%)</div>
                                <div class="cart-summary-value tax">₹<%= tax.toFixed(2) %></div>
                            </div>
                            <div class="cart-summary-row">
                                <div class="cart-summary-label">Total</div>
                                <div class="cart-summary-value total">₹<%= total.toFixed(2) %></div>
                            </div>
                            <div class="mt-4">
                                <% if (canCheckout) { %>
                                    <a href="/checkout" class="cart-checkout-btn">Proceed to Checkout</a>
                                <% } else { %>
                                    <button class="cart-checkout-btn" disabled style="opacity: 0.6; cursor: not-allowed;">
                                        Cannot Proceed - Stock Issues
                                    </button>
                                    <small class="d-block text-muted mt-2">
                                        Please resolve stock issues above to continue
                                    </small>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</section>

<style>
.table-danger {
    background-color: #f8d7da;
}
.table-warning {
    background-color: #fff3cd;
}
.cart-quantity-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}
.cart-quantity-input:disabled {
    opacity: 0.7;
    background-color: #e9ecef;
}
.alert ul {
    padding-left: 1rem;
}
.badge {
    font-size: 0.65rem;
}
</style>


<script>
document.addEventListener('DOMContentLoaded', () => {
  const updateServer = async (id, qty) => {
    try {
      const res = await fetch(`/cart/${id}`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ quantity: qty })
      });
      const json = await res.json();
      
      if (!json.success) {
        // Show error message from server
        await Swal.fire({
          icon: 'warning',
          title: 'Stock limit',
          text: json.message
        });
        
        // Reset input to original value if update failed
        const input = document.querySelector(`.cart-quantity-input[data-id="${id}"]`);
        const row = input.closest('tr');
        const stock = parseInt(row.dataset.stock);
        
        // Set to maximum available stock
        input.value = Math.min(parseInt(input.value), stock);
        updateItemTotal(id);
      }
    } catch (err) {
      console.error('Cart update error:', err);
      await Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Failed to update cart. Please try again.'
      });
    }
  };

  const updateItemTotal = id => {
    const input = document.querySelector(`.cart-quantity-input[data-id="${id}"]`);
    const row = input.closest('tr');
    const price = parseFloat(row.dataset.price);
    const qty = parseInt(input.value, 10);
    
    row.querySelector('.item-total').textContent = '₹' + (price * qty).toFixed(2);
    updateCartSummary();
  };

  const updateCartSummary = () => {
    let subtotal = 0;
    document.querySelectorAll('.cart-table tbody tr').forEach(row => {
      const totalText = row.querySelector('.item-total').textContent;
      subtotal += parseFloat(totalText.replace('₹', ''));
    });
    
    const shipping = 10;
    const tax = subtotal * 0.05;
    const total = subtotal + shipping + tax;

    document.querySelector('.subtotal').textContent = '₹' + subtotal.toFixed(2);
    document.querySelector('.tax').textContent = '₹' + tax.toFixed(2);
    document.querySelector('.total').textContent = '₹' + total.toFixed(2);
  };

  async function handleChange(e) {
    const btn = e.target.closest('button');
    const input = btn 
      ? document.querySelector(`.cart-quantity-input[data-id="${btn.dataset.id}"]`)
      : e.target;
    
    const row = input.closest('tr');
    const stock = parseInt(row.dataset.stock);
    const currentValue = parseInt(input.value, 10);

    if (btn) {
      let newValue = currentValue + (btn.classList.contains('increase-btn') ? 1 : -1);
      if (newValue < 1) newValue = 1;
      if (newValue > stock) {
        newValue = stock;
        await Swal.fire({
          icon: 'warning',
          title: 'Stock limit reached',
          text: `Only ${stock} of this item available.`
        });
      }
      input.value = newValue;
    }

    let qty = parseInt(input.value, 10);

    // Validate quantity limits
    if (qty < 1) {
      qty = 1;
      input.value = qty;
    }

    if (qty > stock) {
      input.value = stock;
      await Swal.fire({
        icon: 'warning',
        title: 'Stock limit reached',
        text: `Only ${stock} of this item available.`
      });
      qty = stock;
    }

    // Update UI first (optimistic update)
    updateItemTotal(input.dataset.id);
    
    // Then sync with server
    await updateServer(input.dataset.id, qty);
  }

  // Add event listeners
  document.querySelectorAll('.decrease-btn, .increase-btn, .cart-quantity-input')
    .forEach(el => {
      if (el.classList.contains('cart-quantity-input')) {
        el.addEventListener('change', handleChange);
        el.addEventListener('blur', handleChange);
      } else {
        el.addEventListener('click', handleChange);
      }
    });
});

function removeFromCart(itemId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "This item will be removed from your cart",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3BB77E',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/cart/remove', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ itemId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire(
                        'Removed!',
                        'Item has been removed from your cart.',
                        'success'
                    ).then(() => {
                        window.location.reload();
                    });
                } else {
                    throw new Error(data.message || 'Failed to remove item');
                }
            })
            .catch(error => {
                Swal.fire(
                    'Error!',
                    error.message || 'Something went wrong',
                    'error'
                );
            });
        }
    });
}

// Initialize cart event handlers on page load
document.addEventListener('DOMContentLoaded', function() {
    // Override all cart remove forms to use SweetAlert
    document.querySelectorAll('form[action^="/cart/remove"]').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            const itemId = this.querySelector('input[name="itemId"]').value;
            removeFromCart(itemId);
        });
    });
});
</script>