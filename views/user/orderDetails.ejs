<%- include('../partials/user/header.ejs') %>

<!-- Responsive Header -->
<style>
/* General Reset */
.header, .header-area, .header-middle, .header-bottom, .header-top, .header-wrap, .header-action-right, .header-action-2, .header-action-icon-2, .logo {
    box-sizing: border-box;
}

/* Modern Flex Header */
.responsive-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.75rem 1rem;
    background: #fff;
    border-bottom: 1px solid #eee;
    position: sticky;
    top: 0;
    z-index: 1002;
}

.header-wrap .header-right {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: flex-end;
}

.responsive-header .logo {
    font-size: 1.7rem;
    font-weight: 700;
    color: #222;
    letter-spacing: 1px;
    text-decoration: none;
    display: flex;
    align-items: center;
}
.responsive-header .logo img {
    height: 36px;
    margin-right: 8px;
}
.responsive-header .header-icons {
    display: flex;
    align-items: center;
    gap: 1.2rem;
}
.responsive-header .header-icons a {
    display: flex;
    align-items: center;
    position: relative;
    color: #222;
    transition: color 0.2s;
    font-size: 1.3rem;
}
.responsive-header .header-icons a .wishlist-heart.red {
    color: #ff3b3b !important;
}
.responsive-header .header-icons a .wishlist-heart {
    transition: color 0.2s;
}
.responsive-header .header-icons a:hover {
    color: #007bff;
}

/* Hamburger */
.hamburger {
    display: none;
    flex-direction: column;
    justify-content: center;
    width: 38px;
    height: 38px;
    background: #fff;
    border: 1px solid #eee;
    border-radius: 6px;
    cursor: pointer;
    align-items: center;
    z-index: 1101;
    margin-left: 0.5rem;
}
.hamburger span {
    display: block;
    width: 22px;
    height: 3px;
    background: #222;
    margin: 3px 0;
    border-radius: 2px;
    transition: all 0.3s;
}

/* Mobile Menu */
.mobile-menu {
    display: none;
    position: fixed;
    top: 0;
    left: -260px;
    width: 240px;
    height: 100vh;
    background: #fff;
    box-shadow: 2px 0 12px rgba(0,0,0,0.08);
    z-index: 1200;
    transition: left 0.3s;
    padding: 2.5rem 1.5rem 1.5rem 1.5rem;
    flex-direction: column;
    gap: 1.5rem;
}
.mobile-menu.active {
    left: 0;
    display: flex;
}
.mobile-menu .menu-link {
    font-size: 1.15rem;
    color: #222;
    text-decoration: none;
    margin-bottom: 1.2rem;
    font-weight: 500;
    transition: color 0.2s;
}
.mobile-menu .menu-link.active,
.mobile-menu .menu-link:hover {
    color: #007bff;
}
.mobile-menu .close-menu {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    font-size: 1.5rem;
    color: #222;
    cursor: pointer;
}

.menu-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0,0,0,0.25);
    z-index: 1199;
    opacity: 0;
    transition: opacity 0.3s;
}
.menu-overlay.active {
    display: block;
    opacity: 1;
}

/* Responsive Breakpoints */
@media (max-width: 991px) {
    .header-area, .header-middle, .header-bottom, .header-top {
        display: none !important;
    }
    .responsive-header {
        display: flex;
    }
    .hamburger {
        display: flex;
    }
    .mobile-menu {
        display: flex;
    }
}
@media (min-width: 992px) {
    .responsive-header, .mobile-menu, .menu-overlay {
        display: none !important;
    }
    .responsive-header .logo {
        margin-left: auto;
        margin-right: 0;
    }
}
</style>

<script>
// Expose login state to JS
var isUserLoggedIn = "<%= (typeof user !== 'undefined' && user) ? 'true' : 'false' %>";
</script>

<!-- Responsive Header for Mobile/Tablet -->
<div class="responsive-header">
    <a href="/home" class="logo">
        <img src="/assets/imgs/theme/shoestore-logo.svg" alt="ShoeStore" onerror="this.style.display='none';">
    </a>
    <div class="header-icons">
        <a href="/wishlist" title="Wishlist"><i class="fi-rs-heart wishlist-heart"></i></a>
        <a href="/cart" title="Cart"><i class="fi-rs-shopping-cart"></i></a>
        <button class="hamburger" id="mobileMenuToggle" aria-label="Open menu">
            <span></span><span></span><span></span>
        </button>
    </div>
</div>
<div class="menu-overlay" id="menuOverlay"></div>
<nav class="mobile-menu" id="mobileMenu" aria-label="Mobile navigation">
    <button class="close-menu" id="closeMobileMenu" aria-label="Close menu">&times;</button>
    <a href="/home" class="menu-link <%= (typeof page !== 'undefined' && page === 'home') ? 'active' : '' %>">Home</a>
    <a href="/shop" class="menu-link <%= (typeof page !== 'undefined' && page === 'shop') ? 'active' : '' %>">Shop</a>
    <a href="/profileinfo" class="menu-link <%= (typeof page !== 'undefined' && page === 'profile') ? 'active' : '' %>">Profile</a>
    <a href="/logout" class="menu-link <%= (typeof page !== 'undefined' && page === 'logout') ? 'active' : '' %>">Logout</a>
</nav>

<script>
// Mobile menu toggle
(function() {
    const menuToggle = document.getElementById('mobileMenuToggle');
    const mobileMenu = document.getElementById('mobileMenu');
    const menuOverlay = document.getElementById('menuOverlay');
    const closeMenuBtn = document.getElementById('closeMobileMenu');
    function openMenu() {
        mobileMenu.classList.add('active');
        menuOverlay.classList.add('active');
        document.body.style.overflow = 'hidden';
    }
    function closeMenu() {
        mobileMenu.classList.remove('active');
        menuOverlay.classList.remove('active');
        document.body.style.overflow = '';
    }
    menuToggle.addEventListener('click', openMenu);
    closeMenuBtn.addEventListener('click', closeMenu);
    menuOverlay.addEventListener('click', closeMenu);
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && mobileMenu.classList.contains('active')) closeMenu();
    });
})();
</script>

<!-- Add Material Icons font -->
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

<style>
    .breadcrumb a,
    .breadcrumb span {
        display: inline-block;
        margin-right: 5px;
    }

    .breadcrumb .separator {
        margin: 0 8px;
        color: #999;
    }

    .card-body {
        padding: 1.25rem;
    }

    .card-header {
        padding: 1rem 1.25rem;
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .card-header h4 {
        margin: 0;
        font-size: 1.1rem;
        font-weight: 600;
    }

    .dropdown{
        position:relative;
        display:inline-block;
    }
    .dropdown-content{
        display: none;
        position: absolute;
        background-color: white;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgb(0,0,0,0,2);
        z-index: 1000;
        right: 0;
    }
    .dropdown-content a {
        color: black;
        padding: 12px 16px;
        text-decoration: none;
        display: block;
        width: 100%;
    }
    .dropdown-content a:hover{
        background-color: #f1f1f1;
    }
    .dropdown:hover .dropdown-content{
        display:block;
    }
    .header{
        position: relative;
        z-index: 500;
    }

    /* Dashboard menu styles */
    .dashboard-menu {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        padding: 0;
        margin-bottom: 2rem;
        transition: all 0.3s ease-in-out;
        height: fit-content;
    }

    .dashboard-menu .nav-link {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        color: #666;
        text-decoration: none;
        transition: all 0.3s ease;
        border-bottom: 1px solid #f0f0f0;
    }

    .dashboard-menu .nav-link:last-child {
        border-bottom: none;
    }

    .dashboard-menu .nav-link i {
        margin-right: 12px;
        font-size: 18px;
        width: 20px;
        text-align: center;
    }

    .dashboard-menu .nav-link:hover,
    .dashboard-menu .nav-link.active {
        background-color: #f8f9fa;
        color: #3BB77E;
        text-decoration: none;
    }

    /* Order details styles */
    .order-details-card {
        border: 1px solid #dee2e6;
        border-radius: 8px;
        margin-bottom: 1.5rem;
        transition: all 0.3s ease;
    }

    .order-details-card:hover {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
    }

    .order-details-card .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #f8f9fa;
        padding: 1rem;
        border-bottom: 1px solid #dee2e6;
    }

    .order-details-card .card-body {
        padding: 1rem;
    }

    .order-details-card .order-id {
        font-weight: 600;
        color: #3BB77E;
    }

    .order-details-card .order-date {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .order-details-card .order-status {
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .order-details-card .order-status.pending {
        background-color: #fff3cd;
        color: #856404;
    }

    .order-details-card .order-status.processing {
        background-color: #cce5ff;
        color: #004085;
    }

    .order-details-card .order-status.shipped {
        background-color: #d4edda;
        color: #155724;
    }

    .order-details-card .order-status.delivered {
        background-color: #d1e7dd;
        color: #0f5132;
    }

    .order-details-card .order-status.cancelled {
        background-color: #f8d7da;
        color: #721c24;
    }

    .order-details-card .order-status.failed {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #dc3545;
    }

    .order-details-card .order-total {
        font-weight: 600;
        font-size: 1.1rem;
    }

    .order-details-card .order-items {
        margin-top: 1rem;
        border-top: 1px solid #dee2e6;
        padding-top: 1rem;
    }

    .order-details-card .order-item {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #f5f5f5;
    }

    .order-details-card .order-item:last-child {
        margin-bottom: 0;
        padding-bottom: 0;
        border-bottom: none;
    }

    .order-details-card .order-item img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        margin-right: 1rem;
        border-radius: 4px;
    }

    .order-details-card .order-item-details {
        flex-grow: 1;
    }

    .order-details-card .order-item-name {
        font-weight: 600;
        font-size: 1.05rem;
        margin-bottom: 0.25rem;
    }

    .order-details-card .order-item-price {
        color: #3BB77E;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .order-details-card .order-item-quantity {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .order-details-card .order-item-total {
        font-weight: 600;
        color: #333;
    }

    .order-details-card .order-summary {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid #dee2e6;
    }

    .order-details-card .order-summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.5rem;
    }

    .order-details-card .order-summary-row:last-child {
        margin-bottom: 0;
        padding-top: 0.5rem;
        border-top: 1px solid #dee2e6;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .order-details-card .order-summary-label {
        color: #6c757d;
    }

    .order-details-card .order-summary-value {
        font-weight: 500;
    }

    .order-details-card .order-actions {
        margin-top: 1.5rem;
        display: flex;
        justify-content: flex-end;
        gap: 0.5rem;
    }

    .order-details-card .order-actions .btn {
        padding: 0.5rem 1rem;
    }

    .order-details-card .order-timeline {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid #dee2e6;
    }

    .order-details-card .order-timeline-title {
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .order-details-card .order-timeline-item {
        position: relative;
        padding-left: 1.5rem;
        padding-bottom: 1rem;
    }

    .order-details-card .order-timeline-item:last-child {
        padding-bottom: 0;
    }

    .order-details-card .order-timeline-item::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0.5rem;
        width: 0.75rem;
        height: 0.75rem;
        border-radius: 50%;
        background-color: #3BB77E;
    }

    .order-details-card .order-timeline-item.completed::before {
        background-color: #3BB77E;
    }
    .order-details-card .order-timeline-item.cancelled::before {
        background-color: #ff0000;
    }

    .order-details-card .order-timeline-item.pending::before {
        background-color: #ffc107;
    }

    .order-details-card .order-timeline-item.future::before {
        background-color: #dee2e6;
    }

    .order-details-card .order-timeline-date {
        font-size: 0.85rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
    }

    .order-details-card .order-timeline-title {
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .order-details-card .order-timeline-description {
        color: #6c757d;
        font-size: 0.9rem;
    }

    .order-details-card .shipping-address,
    .order-details-card .billing-address {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid #dee2e6;
    }

    .order-details-card .address-title {
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .order-details-card .address-details {
        color: #6c757d;
        line-height: 1.6;
    }

    .order-details-card .payment-method {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid #dee2e6;
    }

    .order-details-card .payment-method-title {
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .order-details-card .payment-method-details {
        color: #6c757d;
        line-height: 1.6;
    }

    .order-details-card .payment-method-icon {
        margin-right: 0.5rem;
        color: #3BB77E;
    }

    .back-to-orders {
        margin-bottom: 1rem;
    }
    /* cancell button */
 
.cancel-order-section {
    margin-top: 20px;
}

.cancel-order-section .form-control {
    font-size: 14px;
    resize: vertical;
}

.cancel-order-section .btn {
    margin-top: 8px;
}

/* order track */

.order-timeline-item.future {
    opacity: 0.5;
}
.order-timeline-item.completed {
    color: green;
    font-weight: 600;
}
.order-timeline-item.cancelled {
    color: red;
    font-weight: 600;
}
/* Responsive Sidebar Styles */
.sidebar-toggle {
        display: none;
        position: fixed;
        top: 80px;
        left: 20px;
        z-index: 1001;
        background: #3BB77E;
        color: white;
        border: none;
        border-radius: 8px;
        padding: 12px 14px;
        cursor: pointer;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        transition: all 0.3s ease;
    }

    .sidebar-toggle:hover {
        background: #2d8f5f;
        transform: scale(1.05);
    }

    .sidebar-toggle .hamburger {
        width: 24px;
        height: 3px;
        background: white;
        position: relative;
        transition: all 0.3s ease;
        border-radius: 2px;
    }

    .sidebar-toggle .hamburger::before,
    .sidebar-toggle .hamburger::after {
        content: '';
        position: absolute;
        width: 24px;
        height: 3px;
        background: white;
        transition: all 0.3s ease;
        border-radius: 2px;
    }

    .sidebar-toggle .hamburger::before {
        top: -8px;
    }

    .sidebar-toggle .hamburger::after {
        bottom: -8px;
    }

    .sidebar-toggle.active .hamburger {
        background: transparent;
    }

    .sidebar-toggle.active .hamburger::before {
        transform: rotate(45deg);
        top: 0;
    }

    .sidebar-toggle.active .hamburger::after {
        transform: rotate(-45deg);
        bottom: 0;
    }

    .sidebar-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 999;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .sidebar-overlay.active {
        opacity: 1;
    }

    /* Mobile and Tablet Responsive */
    @media (max-width: 991px) {
        .sidebar-toggle {
            display: block;
        }

        .dashboard-menu {
            position: fixed;
            top: 0;
            left: -320px;
            width: 300px;
            height: 100vh;
            z-index: 1000;
            margin: 0;
            border-radius: 0;
            overflow-y: auto;
            transform: translateX(-100%);
            transition: transform 0.3s ease-in-out;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        }

        .dashboard-menu.active {
            transform: translateX(0);
            left: 0;
        }

        .main-content {
            margin-left: 0;
            width: 100%;
            transition: margin-left 0.3s ease-in-out;
        }

        .main-content.sidebar-open {
            margin-left: 300px;
        }

        .wishlist-content {
            margin-top: 80px;
        }

        /* Improve table responsiveness */
        .table-responsive {
            overflow-x: auto;
            border-radius: 8px;
        }

        .shopping-summery {
            min-width: 600px;
        }
    }

    @media (max-width: 768px) {
        .sidebar-toggle {
           top: 90px;
        left: 690px;
        padding: 10px 12px;
        position: absolute;
        }

        .sidebar-toggle .hamburger,
        .sidebar-toggle .hamburger::before,
        .sidebar-toggle .hamburger::after {
            width: 20px;
            height: 2px;
        }

        .sidebar-toggle .hamburger::before {
            top: -6px;
        }

        .sidebar-toggle .hamburger::after {
            bottom: -6px;
        }

        .dashboard-menu {
            width: 280px;
            left: -280px;
        }

        .main-content.sidebar-open {
            margin-left: 280px;
        }

        .wishlist-content .card-header {
            padding: 1rem;
        }

        .wishlist-content .card-header h3 {
            font-size: 1.25rem;
        }

        .wishlist-content .table-responsive {
            padding: 1rem;
        }

        /* Mobile-first table design */
        .shopping-summery {
            display: block;
            min-width: auto;
        }

        .shopping-summery thead {
            display: none;
        }

        .shopping-summery tbody {
            display: block;
        }

        .shopping-summery tr {
            display: block;
            margin-bottom: 1.5rem;
            border: 1px solid #dee2e6;
            border-radius: 12px;
            padding: 1.5rem;
            background: #f8f9fa;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .shopping-summery td {
            display: block;
            text-align: left;
            border: none;
            padding: 0.75rem 0;
            position: relative;
        }

        .shopping-summery td:not(:last-child) {
            border-bottom: 1px solid #e9ecef;
        }

        .shopping-summery td:before {
            content: attr(data-label);
            font-weight: 700;
            color: #333;
            display: block;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .shopping-summery td.image {
            text-align: center;
            border-bottom: 2px solid #dee2e6 !important;
        }

        .shopping-summery td.image:before {
            display: none;
        }

        .shopping-summery td.image img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .shopping-summery td.product-name:before {
            display: none;
        }

        .shopping-summery td.product-name h5 {
            font-size: 1.1rem;
            margin: 0;
        }

        .shopping-summery td.price {
            font-size: 1.2rem;
            font-weight: 700;
        }

        .shopping-summery td.action,
        .shopping-summery td.remove {
            text-align: center;
            border-bottom: none !important;
        }

        .shopping-summery td.action:before,
        .shopping-summery td.remove:before {
            display: none;
        }

        .shopping-summery td.action .btn {
            width: 100%;
            padding: 0.75rem;
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
        }

        .shopping-summery td.remove .btn {
            width: 100%;
            padding: 0.75rem;
            font-size: 0.9rem;
        }

        /* Empty cart mobile styles */
        .cart-empty {
            padding: 2rem 1rem;
        }

        .cart-empty i {
            font-size: 3rem;
        }

        .cart-empty h3 {
            font-size: 1.1rem;
        }

        .cart-empty .btn {
            width: 100%;
            max-width: 200px;
        }
    }

    @media (max-width: 480px) {
        .sidebar-toggle {
             top: 40px;
            left: 250px;
            padding: 8px 10px;
            position: relative;
        }

        .dashboard-menu {
            width: 100%;
            left: -100%;
        }

        .main-content.sidebar-open {
            margin-left: 0;
        }

        .wishlist-content {
            margin-top: 60px;
        }

        .breadcrumb {
            font-size: 0.85rem;
        }

        .shopping-summery tr {
            padding: 1rem;
            margin-bottom: 1rem;
        }

        .shopping-summery td.image img {
            width: 80px;
            height: 80px;
        }

        .shopping-summery td.product-name h5 {
            font-size: 1rem;
        }

        .shopping-summery td.price {
            font-size: 1.1rem;
        }

        .cart-empty i {
            font-size: 2.5rem;
        }

        .cart-empty h3 {
            font-size: 1rem;
        }
    }

    /* Ensure proper z-index for header */
    .header-area {
        z-index: 1002;
    }

    /* Fix for existing mobile menu conflict */
    .mobile-header-active {
        z-index: 1003;
    }


</style>

<header class="header-area header-style-1 header-height-2">
    <div class="header-top header-top-ptb-1 d-none d-lg-block">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-xl-3 col-lg-4">
                    <div class="header-info">
                        <ul>
                            
                        </ul>
                    </div>
                </div>
                <div class="col-xl-6 col-lg-4">
                    <div class="text-center">
                    </div>
                </div>
                <div class="col-xl-3 col-lg-4">
                    <div class="header-info header-info-right">
                        <ul>
                            <li>
                                <a class="language-dropdown-active" href="#"> 
                                    <i class="fi-rs-world"></i> English <i class="fi-rs-angle-small-down"></i>
                                </a>
                                <ul class="language-dropdown">
                                    <li><a href="#"><img src="/assets/imgs/theme/flag-fr.png" alt="">Français</a></li>
                                    <li><a href="#"><img src="/assets/imgs/theme/flag-dt.png" alt="">Deutsch</a></li>
                                    <li><a href="#"><img src="/assets/imgs/theme/flag-ru.png" alt="">Pусский</a></li>
                                </ul>
                            </li>
                            <% if (typeof user !== 'undefined' && user) { %>
                                <div class="dropdown">
                                    <a href="#" class="sign-in-link"><%= user.name %></a>
                                    <div class="dropdown-content">
                                        <a href="/profileinfo">Profile</a>
                                        <a href="/logout">Logout</a>
                                    </div>
                                </div>
                            <% } else { %>
                                <li><i class="fi-rs-user"></i><a href="/signup">Log in/Sign Up</a></li>
                            <% } %>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="header-middle header-middle-ptb-1 d-none d-lg-block">
        <div class="container">
            <div class="header-wrap">
                <div class="logo logo-width-1">
                   <!-- <img src="assets/imgs/theme/shoestore-logo.svg" alt="logo"> -->
                </div>
                <div class="header-right">
                    <div class="search-style-2">
                        <!-- <form action="/search" method="get">
                            <input type="text" placeholder="Search for items..." name="query">
                        </form> -->
                    </div>
                    <div class="header-action-right">
                        <div class="header-action-2">
                            <div class="header-action-icon-2">
                                <a href="/wishlist">
                                    <i class="fi-rs-heart wishlist-heart"></i>
                                    <!-- <img class="svgInject" alt="Evara" src="/assets/imgs/theme/icons/icon-heart.svg"> -->
                                    <!-- <span class="pro-count blue">0</span> -->
                                </a>
                            </div>
                            <div class="header-action-icon-2">
                                <a class="mini-cart-icon" href="/cart">
                                    <i class="fi-rs-shopping-cart"></i>
                                    <!-- <img alt="Evara" src="/assets/imgs/theme/icons/icon-cart.svg"> -->
                                    <!-- <span class="pro-count blue">0</span> -->
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="header-bottom header-bottom-bg-color sticky-bar">
        <div class="container">
            <div class="header-wrap header-space-between position-relative">
                <div class="logo logo-width-1 d-block d-lg-none">
                    <a href="/"><img src="/assets/imgs/theme/shoestore-logo.svg" alt="logo"></a>
                </div>
                <div class="header-nav d-none d-lg-flex">
                    <div class="main-menu main-menu-padding-1 main-menu-lh-2 d-none d-lg-block">
                        <nav>
                            <ul>
                                <li><a href="/">Home</a></li>
                                <li><a href="/shop">Shop</a></li>
        
                            </ul>
                        </nav>
                    </div>
                </div>
                <div class="hotline d-none d-lg-block">
                    
                </div>   
                <div class="header-action-icon-2 d-block d-lg-none">
                    <div class="burger-icon burger-icon-white">
                        <span class="burger-icon-top"><span></span><span></span><span></span></span>
                        <span class="burger-icon-mid"><span></span><span></span><span></span></span>
                        <span class="burger-icon-bottom"><span></span><span></span><span></span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

<div class="mobile-header-active mobile-header-wrapper-style perfect-scrollbar">
    <div class="mobile-header-wrapper-inner">
        <div class="mobile-header-content-area">
            <div class="perfect-scroll">
                <div class="mobile-menu-wrap mobile-header-border">
                    <nav>
                        <ul class="mobile-menu font-heading">
                            <li><a class="active" href="/">Home</a></li>
                            <li><a href="/about">About</a></li>
                            <li><a href="/shop">Shop</a></li>
                            <li><a href="/offers">Deals</a></li>
                            <li><a href="/contact">Contact</a></li>
                        </ul>
                    </nav>
                </div>
                <div class="mobile-account">
                    <h6 class="mb-10px">My Account</h6>
                    <ul class="mobile-menu font-heading">
                        <li><a href="/profileinfo">Profile</a></li>
                        <li><a href="/myorders">My Orders</a></li>
                        <li><a href="/addresses">My Addresses</a></li>
                        <li><a href="/wishlist">Wishlist</a></li>
                        <li><a href="/wallet">My Wallet</a></li>
                        <li><a href="/logout">Logout</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<main class="main">
    <!-- Sidebar Toggle Button -->
    <button class="sidebar-toggle" id="sidebarToggle">
        <div class="hamburger"></div>
    </button>
    
    <!-- Sidebar Overlay -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>
    
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span></span> <a href="/myorders">My Orders</a>
                <span></span> Order Details
            </div>
        </div>
    </div>

    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row">
                <!-- Dashboard Menu -->
                <div class="col-lg-3">
                    <div class="dashboard-menu" id="dashboardMenu">
                        <ul class="nav flex-column" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link" href="/profileinfo">
                                    <i class="fi-rs-user-check"></i> Personal Information
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active" href="/myorders">
                                    <i class="fi-rs-shopping-cart"></i> My Orders
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/myAddresses">
                                    <i class="fi-rs-marker"></i> My Addresses
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/wishlist">
                                    <i class="fi-rs-heart"></i> Wishlist
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/wallet">
                                    <i class="fi-rs-credit-card"></i> My Wallet
                                </a>
                            </li>
                            
                            <li class="nav-item">
                                <a class="nav-link" href="/security">
                                    <i class="fi-rs-shield-check"></i> Security Settings
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/logout">
                                    <i class="fi-rs-exit"></i> Logout
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>

                <!-- Main Content -->
                <div class="col-lg-9 main-content" id="mainContent">
                    <% // Build array of only those items flagged for return %>
                    <% const itemsRequested = order.orderItems.filter(i => Array.isArray(i.statusHistory) && i.statusHistory.some(h => h.status === 'Return Requested')); %>

                    <div class="back-to-orders">
                        <button class="btn btn-sm btn-outline-secondary" onclick="window.location.href='/myorders'">
                            <i class="fi-rs-arrow-left"></i> Back to My Orders
                        </button>
                        <% if (order.status !== 'Cancelled') { %>
                                <a href="/order/invoice/<%= order._id %>" class="action-btn primary-btn" target="_blank">
                                    <i class="fi-rs-download"></i> Download Invoice
                                </a>
                            <% } %>
                    </div>
                    
                    <div class="order-details-card">
                        <div class="card-header">
                            <div>
                                <span class="order-id">Order <%= order.orderId %></span>
                                <span class="order-date ms-2">Placed on: <%= order.createdAt.toLocaleDateString() %></span>
                            </div>
                    
                                                        <%
                            const statusClassMap = {
                                'Pending'        : 'pending',
                                'Order Placed'   : 'placed',
                                'Order Confirmed': 'confirmed',
                                'Order Shipped'  : 'shipped',
                                'Delivered'      : 'delivered',
                                'Cancelled'      : 'cancelled',
                                'Returned'       : 'returned',
                                'Payment Failed' : 'failed'
                            };
                            // pick the class, default to 'pending' if status is unknown
                            let cssClass = statusClassMap[order.status] || 'pending';
                            
                            // Handle payment failed status
                            if (order.paymentStatus === 'Failed' || order.status === 'Payment Failed') {
                                cssClass = 'failed';
                            }
                            %>
                            <span class="order-status <%= cssClass %>">
                                <% if (order.paymentStatus === 'Failed' || order.status === 'Payment Failed') { %>
                                    Payment Failed
                                <% } else { %>
                                    <%= order.status %>
                                <% } %>
                            </span>

                        </div>
                    
                        <div class="card-body">
                            <% 
                            // Calculate totals excluding cancelled items
                            let subtotal = 0;
                            let cancelledItemsTotal = 0;
                            
                            order.orderItems.forEach(item => {
                                const itemTotal = (item.product?.salePrice || item.price || 0) * item.quantity;
                                if (item.currentStatus === 'Cancelled') {
                                    cancelledItemsTotal += itemTotal;
                                } else {
                                    subtotal += itemTotal;
                                }
                            });
                            
                            let tax = 0.05 * subtotal;
                            let deliveryCharge = order.deliveryCharge || 41;
                            let discount = order.discount || order.couponDiscount || 0;
                            let total = subtotal + tax + deliveryCharge - discount;
                            %>
                    
                            <div class="order-items">
                                <% order.orderItems.forEach((item, itemIndex) => { 
                                    // Determine the status for this specific item
                                    let itemStatus = 'Delivered'; // Default status
                                    
                                    // Debug info array
                                    let debugInfo = [];
                                    debugInfo.push(`Item ${itemIndex} initial status: ${itemStatus}`);
                                    
                                    if (Array.isArray(item.statusHistory)) {
                                        debugInfo.push(`Item has statusHistory with ${item.statusHistory.length} entries`);
                                        
                                        // Check if this item has a returned status
                                        const returnedEntry = item.statusHistory.find(h => h.status === 'Returned');
                                        const requestedEntry = item.statusHistory.find(h => h.status === 'Return Requested');
                                        
                                        debugInfo.push(`Has 'Returned' entry: ${!!returnedEntry}`);
                                        debugInfo.push(`Has 'Return Requested' entry: ${!!requestedEntry}`);
                                        
                                        // Only mark as returned if THIS specific item has been returned
                                        if (returnedEntry) {
                                            itemStatus = 'Returned';
                                            debugInfo.push(`Setting status to: ${itemStatus}`);
                                        } else if (requestedEntry) {
                                            itemStatus = 'Return Requested';
                                            debugInfo.push(`Setting status to: ${itemStatus}`);
                                        }
                                    } else {
                                        debugInfo.push(`Item has no statusHistory or it's not an array`);
                                    }
                                    
                                    // Check if 'currentStatus' property exists and use it if available
                                    if (item.currentStatus) {
                                        debugInfo.push(`Item has currentStatus property: ${item.currentStatus}`);
                                        // Use currentStatus if it exists
                                        itemStatus = item.currentStatus;
                                    }
                                    
                                    // For debugging, log to console
                                    console.log(`Item ${itemIndex} (${item.product?.productName || 'unnamed'}): ${debugInfo.join(' | ')}`);
                                %>
                                <div class="order-item">
                                    <!-- <img src="/uploads/product-images/<%= item.productImage %>" alt="Product"> -->
                                     <img src="<%= item.productImage %>" alt="<%= item.product?.productName || 'Product' %>" onerror="this.src='/assets/imgs/shop/product-placeholder.jpg'" />
                                    <div class="order-item-details">
                                        <div class="order-item-name"><%= item.product?.productName || "Unnamed Product" %></div>
                                        <div class="order-item-price">
                                            <% if (item.currentStatus === 'Cancelled') { %>
                                                <span class="text-decoration-line-through text-muted">₹<%= item.product.salePrice %></span>
                                            <% } else { %>
                                                ₹<%= item.product.salePrice %>
                                            <% } %>
                                        </div>
                                        <div class="order-item-quantity">
                                            Quantity: <%= item.quantity %><br>
                                            <span>Size: <%= item?.variant?.size?.toUpperCase?.() || 'N/A' %></span>
                                        </div>
                                        <!-- Add item status badge -->
                                        <div class="item-status mt-2">
                                            <% if (item.currentStatus === 'Returned') { %>
                                                <span class="badge bg-success">Returned & Refunded</span>
                                              <% } else if (item.currentStatus === 'Return Requested') { %>
                                                <span class="badge bg-warning text-dark">Return Requested</span>
                                              <% } else if (item.currentStatus === 'Cancelled') { %>
                                                <span class="badge bg-danger">Cancelled</span>
                                              <% } else { %>
                                                <span class="badge bg-secondary"><%= item.currentStatus %></span>
                                              <% } %>
                                        </div>
                                        
                                        <!-- Debug information (remove in production) -->
                                        <div class="debug-info small text-muted mt-1">
                                            Status: <%= itemStatus %>
                                            <% if (item.statusHistory) { %>
                                                | History: <%= item.statusHistory.map(h => h.status).join(', ') %>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="order-item-total">
                                        <% if (item.currentStatus === 'Cancelled') { %>
                                            <span class="text-decoration-line-through text-muted">₹<%= item.product.salePrice * item.quantity %></span>
                                            <br><small class="text-danger">(Cancelled)</small>
                                        <% } else { %>
                                            ₹<%= item.product.salePrice * item.quantity %>
                                        <% } %>
                                    </div>
                                </div>
                                <% if (
    item.currentStatus !== 'Cancelled' &&
    item.currentStatus !== 'Returned' &&
    item.currentStatus !== 'Return Requested' &&
    item.currentStatus !== 'Delivered'
) { %>
    <form method="POST" action="/cancel-item/<%= order._id %>/<%= item._id %>" style="display:inline; margin-top:8px;">
        <input type="text" name="cancelReason" placeholder="Reason (optional)" class="form-control form-control-sm mb-1" style="max-width:200px; display:inline-block;" />
        <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Cancel this item?');">
            Cancel Item
        </button>
    </form>
<% } else if (item.currentStatus === 'Cancelled') { %>
    <span class="badge bg-danger">Cancelled</span>
<% } %>
                                <% }) %>
                            </div>
                    
                            <div class="order-summary">
                                <% if (cancelledItemsTotal > 0) { %>
                                    <div class="order-summary-row">
                                        <div class="order-summary-label">Original Subtotal</div>
                                        <div class="order-summary-value">₹<%= (subtotal + cancelledItemsTotal).toFixed(2) %></div>
                                    </div>
                                    <div class="order-summary-row">
                                        <div class="order-summary-label">Cancelled Items</div>
                                        <div class="order-summary-value" style="color: #dc3545;">-₹<%= cancelledItemsTotal.toFixed(2) %></div>
                                    </div>
                                <% } %>
                                <div class="order-summary-row">
                                    <div class="order-summary-label">Subtotal (Active Items)</div>
                                    <div class="order-summary-value">₹<%= subtotal.toFixed(2) %></div>
                                </div>
                                <div class="order-summary-row">
                                    <div class="order-summary-label">Delivery charge</div>
                                    <div class="order-summary-value">₹<%= deliveryCharge.toFixed(2) %></div>
                                </div>
                                <div class="order-summary-row">
                                    <div class="order-summary-label">Tax (5%)</div>
                                    <div class="order-summary-value">₹<%= tax.toFixed(2) %></div>
                                </div>
                                <% if (discount > 0) { %>
                                <div class="order-summary-row">
                                    <div class="order-summary-label">Coupon Discount</div>
                                    <div class="order-summary-value" style="color: #3BB77E;">-₹<%= discount.toFixed(2) %></div>
                                </div>
                                <% if (order.appliedCoupon || order.couponCode) { %>
                                <div class="order-summary-row" style="font-size: 0.9rem; color: #6c757d;">
                                    <div class="order-summary-label">Coupon Used</div>
                                    <div class="order-summary-value">
                                        <%= order.appliedCoupon?.code || order.couponCode || 'N/A' %>
                                        <% if (order.appliedCoupon?.name) { %>
                                            <br><small>(<%= order.appliedCoupon.name %>)</small>
                                        <% } %>
                                    </div>
                                </div>
                                <% } %>
                                <% } %>
                                <div class="order-summary-row">
                                    <div class="order-summary-label">Final Total</div>
                                    <div class="order-summary-value">₹<%= total.toFixed(2) %></div>
                                </div>
                            </div>
                    
                            <!-- Payment Failed Message -->
                            <% if (order.paymentStatus === 'Failed' || order.status === 'Payment Failed') { %>
                                <div class="alert alert-danger mt-3" role="alert">
                                    <div class="d-flex align-items-center">
                                        <i class="material-icons me-2">error</i>
                                        <div>
                                            <h6 class="alert-heading mb-1">Payment Failed</h6>
                                            <p class="mb-2">Your payment for this order was unsuccessful. The order has been cancelled automatically.</p>
                                            <div class="mt-2">
                                                <strong>What you can do:</strong>
                                                <ul class="mb-0 mt-1">
                                                    <li>Check your payment method and try placing a new order</li>
                                                    <li>Contact customer support if you believe this is an error</li>
                                                    <li>Ensure you have sufficient funds in your account</li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <% } %>
                    
                            <!-- Add status history timeline -->
                            
<!-- In the order timeline section, update to handle per-item status -->
                            <div class="order-timeline">
                                <div class="order-timeline-title">Order Timeline</div>

                                <% if (order.status === 'Cancelled') { %>
                                    <!-- CANCELLED -->
                                    <div class="order-timeline-item cancelled">
                                        <div class="order-timeline-date">
                                            <%= new Date(order.updatedAt).toLocaleDateString() %>
                                        </div>
                                        <div class="order-timeline-title">Order Cancelled</div>
                                        <div class="order-timeline-description">
                                            Reason: <%= order.cancelReason || 'No reason provided' %>
                                        </div>
                                    </div>

                                <% } else { 
                                    const steps = [
                                        { key: 'order placed',    title: 'Order Placed',    description: 'Your order has been placed successfully.', fallbackDate: order.createdAt },
                                        { key: 'order confirmed', title: 'Order Confirmed', description: 'Your order has been confirmed.', fallbackDate: null },
                                        { key: 'order shipped',   title: 'Order Shipped',   description: 'Your order has been shipped.', fallbackDate: null },
                                        { key: 'delivered',       title: 'Order Delivered', description: 'Your order has been delivered.', fallbackDate: null }
                                    ];
                                
                                    const hist = {};
                                    if (order.statusHistory && Array.isArray(order.statusHistory)) {
                                        order.statusHistory.forEach(h => {
                                            if (h && h.status) {
                                                hist[h.status.toLowerCase()] = h.timestamp;
                                            }
                                        });
                                    }
                                
                                    // Use the base order status for the timeline (not affected by individual item returns)
                                    // We'll consider an order "Delivered" even if some items are returned
                                    const orderBaseStatus = order.status === 'Returned' ? 'Delivered' : order.status;
                                    const currentIndex = steps.findIndex(s => s.key === (orderBaseStatus || '').toLowerCase());
                                %>
                                
                                    <% steps.forEach((step, idx) => {
                                        const done = idx <= currentIndex;
                                        const date = hist[step.key] || step.fallbackDate;
                                    %>
                                        <div class="order-timeline-item <%= done ? 'completed' : 'future' %>">
                                            <div class="order-timeline-date">
                                                <% if (date) { %>
                                                    <%= new Date(date).toLocaleDateString() %> 
                                                    <%= new Date(date).toLocaleTimeString() %>
                                                <% } else { %>
                                                    <% if (done) { %>
                                                        <%= new Date().toLocaleDateString() %>
                                                        <%= new Date().toLocaleTimeString() %>
                                                    <% } else { %>
                                                        &nbsp;
                                                    <% } %>
                                                <% } %>
                                            </div>
                                            <div class="order-timeline-title"><%= step.title %></div>
                                            <div class="order-timeline-description">
                                                <%= step.description %>
                                            </div>
                                        </div>
                                    <% }) %>

                                    <% // Add returned items section if any items have been returned %>
                                    <% const returnedItems = order.orderItems.filter(i => 
                                        Array.isArray(i.statusHistory) && 
                                        i.statusHistory.some(h => h.status === 'Returned')); %>
                                    
                                    <% if (returnedItems.length > 0) { %>
                                        <div class="order-timeline-item completed">
                                            <div class="order-timeline-date">
                                                <% 
                                                // Find the most recent return timestamp
                                                let latestReturnDate = null;
                                                returnedItems.forEach(item => {
                                                    const returnEntry = item.statusHistory.find(h => h.status === 'Returned');
                                                    if (returnEntry && returnEntry.timestamp) {
                                                        const returnDate = new Date(returnEntry.timestamp);
                                                        if (!latestReturnDate || returnDate > latestReturnDate) {
                                                            latestReturnDate = returnDate;
                                                        }
                                                    }
                                                });
                                                %>
                                                <% if (latestReturnDate) { %>
                                                    <%= latestReturnDate.toLocaleDateString() %>
                                                    <%= latestReturnDate.toLocaleTimeString() %>
                                                <% } else { %>
                                                    <%= new Date().toLocaleDateString() %>
                                                    <%= new Date().toLocaleTimeString() %>
                                                <% } %>
                                            </div>
                                            <div class="order-timeline-title">Partial Return Processed</div>
                                            <div class="order-timeline-description">
                                                <%= returnedItems.length %> item<%= returnedItems.length > 1 ? 's' : '' %> from this order <%= returnedItems.length > 1 ? 'have' : 'has' %> been returned and refunded.
                                            </div>
                                        </div>
                                    <% } %>
                                <% } %>
                            </div>
                            
                                  
                              
                                
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="shipping-address">
                                        <div class="address-title">Shipping Address</div>
                                        <div class="address-details">
                                            <% if (order.userId) { %>
                                            <p><strong><%= order.userId.name || 'N/A' %></strong></p>
                                            <% } else { %>
                                                Unknown User
                                            <% } %>
                                            <% 
                                            let addressDetail;
                                            if (order?.address?.addressDocId?.address && order.address.addressDetailId) {
                                                addressDetail = order.address.addressDocId.address.find(d => d._id.toString() === order.address.addressDetailId.toString());
                                            }
                                        %>
                                            <p><%= addressDetail?.addressLine1 || 'N/A' %></p>
                                            <p><%= addressDetail?.addressLine2 || 'N/A' %></p>
                                            <p><%= addressDetail?.city || 'N/A' %></p>
                                            <p>Phone: <%= addressDetail?.phone || 'N/A' %></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                    
                            <div class="payment-method">
                                <div class="payment-method-title">Payment Method</div>
                                <div class="payment-method-details">
                                    <p><i class="fi-rs payment-method-icon"></i><%= order.paymentMethod.toUpperCase() || 'N/A' %></p>
                                </div>
                            </div>
                    
                            <div class="order-actions">
                                <% const invoiceAllowedStatuses = ['Order Confirmed', 'Order Shipped', 'Delivered','Returned','Return Requested']; %>
                                <% if (invoiceAllowedStatuses.includes(order.status)) { %>
                                  <!-- <a href="/invoice/<%= order._id %>" class="btn btn-primary">Download Invoice</a> -->
                                <% } %>
                            </div>
                    
                            <!-- Cancel order form (show if order is not yet cancelled) -->
                            <% if (order.status !== 'Cancelled' && (order.status === 'Order Placed' || order.status === 'Pending')) { %>
                                <div class="cancel-order-section mt-3">
                                  <form id="cancelOrderForm" method="POST" action="/cancel-order/<%= order._id %>">
                                    <input type="hidden" name="productId" value="<%= order.orderItems[0].product._id %>">
                                    <div class="mb-2">
                                      <label for="cancelReason" class="form-label">Reason for Cancellation</label>
                                      <textarea class="form-control" id="cancelReason" name="cancelReason" rows="3" required placeholder="Please mention the reason..."></textarea>
                                    </div>
                                    <button type="submit" class="btn btn-sm btn-outline-danger">Cancel Order</button>
                                  </form>
                                </div>
                            <% } else if (order.paymentStatus === 'Failed' || order.status === 'Payment Failed') { %>
                                <div class="mt-3">
                                    <div class="alert alert-warning" role="alert">
                                        <i class="material-icons me-2">info</i>
                                        <strong>Order Actions Unavailable</strong><br>
                                        This order cannot be cancelled or modified as the payment failed. Please place a new order if you wish to purchase these items.
                                    </div>
                                    <div class="mt-3">
                                        <a href="/shop" class="btn btn-primary">
                                            <i class="material-icons me-2">shopping_cart</i>
                                            Place New Order
                                        </a>
                                    </div>
                                </div>
                            <% } else { %>
                                <br>
                                <br>
                                <h6 class="text-danger">Can't cancel the order after order confirmation</h6>
                            <% } %>
                              
                              
                                <!-- Add this section after the cancel order form -->
                                <% if (order.status === 'Delivered' && itemsRequested.length === 0 && order.paymentStatus !== 'Failed' && order.status !== 'Payment Failed') { %>
                                    <div class="return-section mt-4">
                                        <h5>Return Options</h5>
                                        <div class="return-tabs mb-3">
                                            <ul class="nav nav-tabs" id="returnTabs" role="tablist">
                                                <li class="nav-role">
                                                    <a class="nav-link active" id="return-full-tab" data-bs-toggle="tab" href="#return-full" role="tab">Return Entire Order</a>
                                                </li>
                                                <li class="nav-role">
                                                    <a class="nav-link" id="return-items-tab" data-bs-toggle="tab" href="#return-items" role="tab">Return Specific Items</a>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="tab-content">
                                <!-- Return Entire Order -->
                                <div class="tab-pane fade show active" id="return-full" role="tabpanel" aria-labelledby="return-full-tab">
                                    <form id="returnFullOrderForm" method="POST" action="/return-order/<%= order._id %>">
                                        <input type="hidden" name="returnType" value="full">
                                        <div class="mb-3">
                                            <label for="returnFullReason" class="form-label">Reason for Return</label>
                                            <select class="form-select" id="returnFullReason" name="returnReason" required>
                                                <option value="">Select a reason</option>
                                                <option value="Damaged product">Damaged product</option>
                                                <option value="Wrong product received">Wrong product received</option>
                                                <option value="Product quality issue">Product quality issue</option>
                                                <option value="Missing parts/accessories">Missing parts/accessories</option>
                                                <option value="Other">Other reason</option>
                                            </select>
                                        </div>
                                        <div class="mb-3" id="otherReasonFull" style="display: none;">
                                            <label for="otherReturnFullReason" class="form-label">Please specify</label>
                                            <textarea class="form-control" id="otherReturnFullReason" name="otherReason" rows="3" placeholder="Please provide details..."></textarea>
                                        </div>
                                        
                                        <button type="submit" class="btn btn-danger">Return Entire Order</button>
                                    </form>
                                </div>
                                
                                <!-- Return Specific Items -->
                                <div class="tab-pane fade" id="return-items" role="tabpanel" aria-labelledby="return-items-tab">
                                    <form id="returnItemsForm" method="POST" action="/return-items/<%= order._id %>">
                                        <div class="mb-3">
                                            <div class="return-item-selection">
                                                <% order.orderItems.forEach((item, index) => { %>
                                                    <div class="return-item-checkbox mb-2">
                                                        <div class="form-check">
                                                            <input class="form-check-input" type="checkbox" name="returnItems[]" value="<%= item._id %>" id="returnItem<%= index %>">
                                                            <label class="form-check-label" for="returnItem<%= index %>">
                                                                <div class="d-flex align-items-center">
                                                                     <img
                                                                      src="<%= item.productImage %>" alt="<%= item.product?.productName || 'Product' %>"
                                                                    
                                                                    style="width: 50px; height: 50px; object-fit: cover; margin-right: 10px;">
                                                                    <div>
                                                                        <div><%= item.product?.productName || "Unnamed Product" %></div>
                                                                        <div class="text-muted small">Size: <%= item?.variant?.size?.toUpperCase?.() || 'N/A' %>, Qty: <%= item.quantity %></div>
                                                                    </div>
                                                                </div>
                                                            </label>
                                                        </div>
                                                    </div>

                                                    <!-- <img src="/uploads/product-images/<%= item.productImage %>" alt="Product" -->
                                                <% }) %>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="returnItemsReason" class="form-label">Reason for Return</label>
                                            
                                            <select class="form-select" id="returnItemsReason" name="returnReason" required>
                                                <option value="">Select a reason</option>
                                                <option value="Damaged product">Damaged product</option>
                                                <option value="Wrong product received">Wrong product received</option>
                                                <option value="Product quality issue">Product quality issue</option>
                                                <option value="Sizing/fit issue">Sizing/fit issue</option>
                                                <option value="Other">Other reason</option>
                                            </select>
                                        </div>
                                        <div class="mb-3" id="otherReasonItems" style="display: none;">
                                            <label for="otherReturnItemsReason" class="form-label">Please specify</label>
                                            <textarea class="form-control" id="otherReturnItemsReason" name="otherReason" rows="3" placeholder="Please provide details..."></textarea>
                                        </div>
                                        
                                        <button type="submit" class="btn btn-danger">Return Selected Items</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                        
                        <script>
                            // Show/hide "other reason" textarea based on selection
                            document.getElementById('returnFullReason').addEventListener('change', function() {
                                document.getElementById('otherReasonFull').style.display = 
                                    this.value === 'Other' ? 'block' : 'none';
                            });
                            
                            document.getElementById('returnItemsReason').addEventListener('change', function() {
                                document.getElementById('otherReasonItems').style.display = 
                                    this.value === 'Other' ? 'block' : 'none';
                            });
                        </script>
                    <% } %>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
        <style>
            .return-panel {
              max-width: 1460px;        /* adjust this to your sidebar's inner width */
              font-size: 0.85rem;
              padding-left: 450px;     /* gently shrink everything to help it fit */
            }
            .return-panel .table-responsive {
              overflow-x: auto;        /* allow inner scroll if something still overflows */
            }
            .return-panel .table {
              table-layout: fixed;     /* force cells to share the width */
              width: 100%;             /* fill the panel exactly */
            }
            .return-panel th,
            .return-panel td {
              word-wrap: break-word;   /* wrap long text rather than expand */
            }
          </style>
          
          <!-- wrap your entire existing block in this -->
          <div class="return-panel">
          
            <!-- Return Request Confirmation -->
            <% if (locals.session?.returnRequested) { %>
                <div class="alert alert-info alert-dismissible fade show" role="alert">
                    <strong>Return Request Submitted!</strong> We've received your return request and will review it soon.
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
                <% locals.session.returnRequested = null; %> <!-- Clear the message after displaying -->
            <% } %>
          
            <!-- Display for approved returns -->
            <% if (locals.hasReturnedItems && locals.latestApprovedRefund) { %>
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <strong>Return Approved!</strong> Your return request has been approved and the refund has been credited to your wallet.
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            <% } %>
          
            <!-- Return Item Status Section -->
            <% if (itemsRequested.length > 0) { %>
                <div class="return-status-section mt-4 mb-4">
                  <h5>Your Return Status</h5>
                  <div class="table-responsive">
                    <table class="table table-bordered">
                      <thead>
                        <tr>
                          <th>Product</th>
                          <th>Size</th>
                          <th>Qty</th>
                          <th>Status</th>
                          <th>Requested On</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% itemsRequested.forEach(item => {
                             const reqEntry = item.statusHistory.find(h => h.status === 'Return Requested');
                        %>
                        <tr>
                          <td>
                            <div class="d-flex align-items-center">
                               <img
                           src="<%= item.productImage %>" alt="<%= item.product?.productName || 'Product' %>" style="width:40px;height:40px;object-fit:cover;margin-right:8px;">
                              <%= item.product?.productName || 'Unnamed Product' %>
                            </div>
                          </td>
                          <td><%= (item.variant?.size || 'N/A').toUpperCase() %></td>
                          <td><%= item.quantity %></td>
                          <td>
                            <% if (item.currentStatus === 'Returned') { %>
                              <span class="badge bg-success">Returned & Refunded</span>
                            <% } else { %>
                              <span class="badge bg-warning">Return Requested</span>
                            <% } %>
                          </td>
                          <td><%= reqEntry ? new Date(reqEntry.timestamp).toLocaleDateString() : 'N/A' %></td>
                        </tr>
                        <% }) %>
                      </tbody>
                    </table>
                  </div>
                </div>
                <% } %>
                
                

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>
</main>

<%- include('../partials/user/footer.ejs') %>

<script>
    // Sidebar Toggle Functionality
    document.addEventListener('DOMContentLoaded', function() {
        const sidebarToggle = document.getElementById('sidebarToggle');
        const dashboardMenu = document.getElementById('dashboardMenu');
        const sidebarOverlay = document.getElementById('sidebarOverlay');
        const mainContent = document.getElementById('mainContent');
        
        function toggleSidebar() {
            const isActive = dashboardMenu.classList.contains('active');
            
            if (isActive) {
                // Close sidebar
                dashboardMenu.classList.remove('active');
                sidebarOverlay.classList.remove('active');
                sidebarToggle.classList.remove('active');
                mainContent.classList.remove('sidebar-open');
                
                // Hide overlay after animation
                setTimeout(() => {
                    sidebarOverlay.style.display = 'none';
                }, 300);
            } else {
                // Open sidebar
                sidebarOverlay.style.display = 'block';
                setTimeout(() => {
                    sidebarOverlay.classList.add('active');
                }, 10);
                dashboardMenu.classList.add('active');
                sidebarToggle.classList.add('active');
                mainContent.classList.add('sidebar-open');
            }
        }
        
        // Toggle button click
        sidebarToggle.addEventListener('click', toggleSidebar);
        
        // Overlay click to close
        sidebarOverlay.addEventListener('click', toggleSidebar);
        
        // Close sidebar on window resize (if screen becomes large)
        window.addEventListener('resize', function() {
            if (window.innerWidth > 991) {
                dashboardMenu.classList.remove('active');
                sidebarOverlay.classList.remove('active');
                sidebarToggle.classList.remove('active');
                mainContent.classList.remove('sidebar-open');
                sidebarOverlay.style.display = 'none';
            }
        });
        
        // Close sidebar when clicking on a menu link (mobile)
        const menuLinks = dashboardMenu.querySelectorAll('.nav-link');
        menuLinks.forEach(link => {
            link.addEventListener('click', function() {
                if (window.innerWidth <= 991) {
                    toggleSidebar();
                }
            });
        });
    });

    // Original order details functionality
    document.addEventListener('DOMContentLoaded', function() {
        // Simple JavaScript for basic interactions
        const downloadInvoiceButtons = document.querySelectorAll('.btn-outline-primary');
        downloadInvoiceButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                // Add download invoice logic here
                console.log('Downloading invoice');
            });
        });

        const reorderButtons = document.querySelectorAll('.btn-outline-secondary');
        reorderButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                // Add reorder logic here
                console.log('Reordering items');
            });
        });
    });
</script>   