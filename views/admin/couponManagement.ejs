<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
-->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    /* Responsive Sidebar Styles */
    .sidebar-container {
        position: relative;
    }
    
    .navbar-aside {
        width: 280px;
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
        background: #fff;
        z-index: 1000;
        transition: transform 0.3s ease-in-out;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        overflow-y: auto;
    }
    
    .main-wrap {
        margin-left: 280px;
        transition: all 0.3s ease-in-out;
    }
    
    .screen-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0,0,0,0.5);
        z-index: 999;
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }
    
    .screen-overlay.active {
        display: block;
        opacity: 1;
    }
    
    .mobile-header {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        height: 60px;
        background: #fff;
        z-index: 1100;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        padding: 0 15px;
        align-items: center;
        justify-content: space-between;
    }
    
    .mobile-logo {
        display: flex;
        align-items: center;
        height: 100%;
    }
    
    .mobile-logo img {
        height: 35px;
        width: auto;
    }
    
    .hamburger-btn {
        display: none;
        position: relative;
        background: #fff;
        border: none;
        border-radius: 6px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        padding: 10px 12px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .hamburger-btn:hover {
        background: #f8f9fa;
        box-shadow: 0 4px 12px rgba(0,0,0,0.12);
    }
    
    .hamburger-btn .bar {
        display: block;
        width: 24px;
        height: 3px;
        margin: 4px 0;
        background: #333;
        border-radius: 2px;
        transition: all 0.3s ease;
    }
    
    /* Pagination Center Alignment */
    .pagination-area {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        margin-top: 2rem;
        margin-bottom: 2rem;
    }
    
    .pagination {
        justify-content: center !important;
        flex-wrap: wrap;
        gap: 0.25rem;
    }
    
    .pagination .page-link {
        border-radius: 6px;
        margin: 0 2px;
    }
    
    /* Search Form Responsive Styles */
    .search-form {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    .search-form .form-control {
        border: 1px solid #e0e0e0;
        border-radius: 6px;
        transition: border-color 0.3s ease;
    }
    
    .search-form .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
    }
    
    .search-form .btn {
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .search-form .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    /* Responsive Media Queries */
    @media (max-width: 991px) {
        .navbar-aside {
            transform: translateX(-100%);
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        }
        
        .navbar-aside.show {
            transform: translateX(0);
        }
        
        .main-wrap {
            margin-left: 0;
            width: 100%;
            margin-top: 60px; /* Space for mobile header */
        }
        
        .mobile-header {
            display: flex;
        }
        
        .hamburger-btn {
            display: block;
        }
        
        .main-wrap.dimmed {
            filter: blur(2px) grayscale(0.2) brightness(0.95);
            pointer-events: none;
            user-select: none;
        }
        
        /* Adjust table responsiveness */
        .table-responsive {
            font-size: 0.9rem;
        }
        
        .table-responsive th,
        .table-responsive td {
            padding: 0.5rem 0.25rem;
        }
        
        /* Search form mobile adjustments */
        .search-form .d-flex {
            flex-direction: column;
        }
        
        .search-form .d-flex > div {
            width: 100%;
            margin-bottom: 0.5rem;
        }
        
        .search-form .d-flex .d-flex {
            flex-direction: row;
            gap: 0.5rem;
        }
    }
    
    @media (max-width: 768px) {
        .hamburger-btn {
            padding: 8px 10px;
        }
        
        .hamburger-btn .bar {
            width: 20px;
            height: 2px;
            margin: 3px 0;
        }
        
        .mobile-logo img {
            height: 30px;
        }
        
        .pagination-area {
            margin-top: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .pagination {
            font-size: 0.9rem;
        }
        
        /* Search form tablet adjustments */
        .search-form .d-flex {
            flex-direction: column;
        }
        
        .search-form .d-flex .d-flex {
            justify-content: center;
        }
    }
    
    @media (max-width: 576px) {
        .navbar-aside {
            width: 280px;
        }
        
        .mobile-logo img {
            height: 28px;
        }
        
        .pagination-area {
            margin-top: 1rem;
            margin-bottom: 1rem;
        }
        
        .pagination {
            font-size: 0.85rem;
        }
        
        .pagination .page-link {
            padding: 0.375rem 0.5rem;
        }
        
        /* Search form mobile adjustments */
        .search-form .d-flex .d-flex {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .search-form .btn {
            width: 100%;
            margin-bottom: 0.25rem;
        }
    }
</style>

<%- include('../partials/admin/header.ejs') %>

<!-- Mobile Header with Logo and Hamburger -->
<div class="mobile-header">
    <div class="mobile-logo">
        <img src="/assets/imgs/theme/shoestore-logo.svg" alt="Shoestore">
    </div>
    <button class="hamburger-btn" id="sidebarHamburger" aria-label="Toggle sidebar" aria-controls="offcanvas_aside" aria-expanded="false">
        <span class="bar"></span>
        <span class="bar"></span>
        <span class="bar"></span>
    </button>
</div>

<!-- Overlay -->
<div class="screen-overlay" id="sidebarOverlay"></div>

<!-- Sidebar Container -->
<div class="sidebar-container">
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="/admin" class="brand-wrap">
                <img src="/assets/imgs/theme/shoestore-logo.svg" class="logo" alt="Shoestore">
            </a>
            <div>
                <!-- <button class="btn btn-icon btn-aside-minimize">
                    <i class="text-muted material-icons md-menu_open"></i>
                </button> -->
            </div>
        </div>
        <nav>
          <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/users"> <i class="icon material-icons md-person"></i>
                        <span class="text">Customers</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/orders"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/category"> <i class="icon material-icons md-store"></i>
                        <span class="text">Category</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/coupons"> <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Coupons</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/sales"> <i class="icon material-icons md-assessment"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>
                  <li class="menu-item">
                    <a class="menu-link" href="/admin/logout"> <i class="icon material-icons md-exit_to_app"></i>
                        <span class="text">Sign Out</span>
                    </a>
                </li>
            </ul>
        <hr>
    </nav>
</aside>
</div>

<main class="main-wrap" id="mainWrap">
    <!-- <header class="main-header navbar">
        <div class="col-search"></div>
        <div class="col-nav">
            <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside">
                <i class="material-icons md-apps"></i>
            </button>
            <ul class="nav">
                <li class="nav-item"> -->
                    <!-- <a href="#" class="requestfullscreen nav-link btn-icon">
                        <i class="material-icons md-cast"></i>
                    </a> -->
                <!-- </li>
            </ul>
        </div>
    </header> -->
   
    <section class="content-main">
        <div class="content-header">
            <div><h2 class="content-title">Coupons List</h2></div>
        </div>
       
        <!-- Search Form Below Navbar -->
        <div class="card mb-4 search-form">
            <div class="card-body">
                <form action="/admin/coupons" method="GET" class="d-flex flex-column flex-md-row gap-3">
                    <div class="flex-grow-1">
                        <input type="text" name="search" placeholder="Search Coupons" class="form-control bg-white" value="<%= locals.searchQuery || '' %>">
                    </div>
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="material-icons md-search"></i> Search
                        </button>
                        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                            <i class="material-icons md-plus"></i> Add New Coupon
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>SL No</th>
                                <th>Coupon Name</th>
                                <th>Coupon Code</th>
                                <th>Start Date</th>
                                <th>Expiry Date</th>
                                <th>Min Price</th>
                                <th>Offer Price</th>
                                <th>Used</th>
                                <th>Status</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (coupons && coupons.length > 0) { %>
                                <% coupons.forEach((coupon, index) => { %>
                                    <tr>
                                        <td><%= index + 1 %></td>
                                        <td><%= coupon.name %></td>
                                        <td><strong><%= coupon.code %></strong></td>
                                        <td><%= new Date(coupon.startDate).toLocaleDateString() %></td>
                                        <td><%= new Date(coupon.expiryDate).toLocaleDateString() %></td>
                                        <td>₹<%= coupon.minPrice %></td>
                                        <td>₹<%= coupon.offerPrice %></td>
                                        <td><%= coupon.used %></td>
                                        <td>
                                            <% if (coupon.status === 'Active') { %>
                                                <span class="badge bg-success">Active</span>
                                            <% } else if (coupon.status === 'Inactive') { %>
                                                <span class="badge bg-warning">Inactive</span>
                                            <% } else if (new Date(coupon.expiryDate) < new Date()) { %>
                                                <span class="badge bg-danger">Expired</span>
                                            <% } %>
                                        </td>
                                        <td class="text-end">
  <div class="dropdown">
    <button class="btn btn-light rounded btn-sm font-sm" type="button" data-bs-toggle="dropdown" aria-expanded="false">
      <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
        <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"/>
      </svg>
    </button>
    <ul class="dropdown-menu dropdown-menu-end">
      <li>
        <a class="dropdown-item" href="#" onclick="openEditModal('<%= coupon._id %>', '<%= coupon.name %>', '<%= coupon.code %>', '<%= coupon.description %>', '<%= coupon.startDate %>', '<%= coupon.expiryDate %>', '<%= coupon.minPrice %>', '<%= coupon.offerPrice %>', '<%= coupon.usageType %>', '<%= coupon.status %>')">Edit</a>
      </li>
      <% if (coupon.status === 'Active') { %>
        <li>
          <a class="dropdown-item text-danger" href="#" onclick="confirmDeactivate('<%= coupon._id %>', '<%= coupon.code %>')">Deactivate</a>
        </li>
      <% } else { %>
        <li>
          <a class="dropdown-item text-success" href="#" onclick="confirmActivate('<%= coupon._id %>', '<%= coupon.code %>')">Activate</a>
        </li>
      <% } %>
      <li>
        <a class="dropdown-item text-danger" href="#" onclick="confirmDelete('<%= coupon._id %>', '<%= coupon.code %>')">Delete</a>
      </li>
    </ul>
  </div>
</td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="10" class="text-center">No coupons found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Centered Pagination -->
        <div class="pagination-area">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <% if (typeof currentPage !== 'undefined' && typeof totalPages !== 'undefined' && currentPage > 1) { %>
                        <li class="page-item">
                            <a class="page-link" href="/admin/coupons?page=<%= currentPage - 1 %><%= locals.searchQuery ? '&search=' + locals.searchQuery : '' %>" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    <% } %>
                    
                    <% if (typeof totalPages !== 'undefined') { %>
                        <% for(let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= (typeof currentPage !== 'undefined' && currentPage === i) ? 'active' : '' %>">
                                <a class="page-link" href="/admin/coupons?page=<%= i %><%= locals.searchQuery ? '&search=' + locals.searchQuery : '' %>"><%= i %></a>
                            </li>
                        <% } %>
                    <% } %>
                    
                    <% if (typeof currentPage !== 'undefined' && typeof totalPages !== 'undefined' && currentPage < totalPages) { %>
                        <li class="page-item">
                            <a class="page-link" href="/admin/coupons?page=<%= currentPage + 1 %><%= locals.searchQuery ? '&search=' + locals.searchQuery : '' %>" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>
    </section>

    <% if (success) { %>
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <%= success %>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    <% } %>

    <!-- Add Coupon Modal -->
    <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form id="addCouponForm" action="/admin/coupons" method="POST" class="needs-validation" novalidate>
                    <div class="modal-header">
                        <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="couponName" class="form-label">Coupon Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="couponName" name="name" required>
                                <div class="invalid-feedback">Please enter a coupon name.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="couponCode" class="form-label">Coupon Code <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="couponCode" name="code" pattern="[A-Z0-9]{3,10}" required>
                                <div class="form-text">Unique code (e.g., SUMMER25; 3–10 uppercase letters/digits)</div>
                                <div class="invalid-feedback">Please enter a valid coupon code.</div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="couponDescription" class="form-label">Coupon Description</label>
                            <textarea class="form-control" id="couponDescription" name="description" rows="3"></textarea>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="startDate" class="form-label">Start Date <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="startDate" name="startDate" required>
                                <div class="invalid-feedback">Please select a start date.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="expiryDate" class="form-label">Expiry Date <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="expiryDate" name="expiryDate" required>
                                <div class="invalid-feedback">Please select an expiry date.</div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="minPrice" class="form-label">Minimum Price (₹) <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="minPrice" name="minPrice" min="0" required>
                                <div class="form-text">Minimum order value required</div>
                                <div class="invalid-feedback">Enter a non-negative minimum price.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="offerPrice" class="form-label">Offer Price (₹) <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="offerPrice" name="offerPrice" min="0" required>
                                <div class="form-text">Discount amount provided</div>
                                <div class="invalid-feedback">Enter a non-negative offer price.</div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Use Type <span class="text-danger">*</span></label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="usageType" id="singleUse" value="single" checked required>
                                    <label class="form-check-label" for="singleUse">Single Use</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="usageType" id="reusable" value="reusable" required>
                                    <label class="form-check-label" for="reusable">Reusable</label>
                                </div>
                                <div class="invalid-feedback">Select a use type.</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Status <span class="text-danger">*</span></label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="status" id="statusActive" value="active" checked required>
                                    <label class="form-check-label" for="statusActive">Active</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="status" id="statusInactive" value="inactive" required>
                                    <label class="form-check-label" for="statusInactive">Inactive</label>
                                </div>
                                <div class="invalid-feedback">Select a status.</div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Coupon</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Coupon Modal -->
    <div class="modal fade" id="editCouponModal" tabindex="-1" aria-labelledby="editCouponModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form id="editCouponForm" action="/admin/coupons/update" method="POST" class="needs-validation" novalidate>
                    <input type="hidden" id="editCouponId" name="couponId">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editCouponName" class="form-label">Coupon Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="editCouponName" name="name" required>
                                <div class="invalid-feedback">Please enter a coupon name.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="editCouponCode" class="form-label">Coupon Code <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="editCouponCode" name="code" pattern="[A-Z0-9]{3,10}" required>
                                <div class="form-text">Unique code (e.g., SUMMER25; 3–10 uppercase letters/digits)</div>
                                <div class="invalid-feedback">Please enter a valid coupon code.</div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="editCouponDescription" class="form-label">Coupon Description</label>
                            <textarea class="form-control" id="editCouponDescription" name="description" rows="3"></textarea>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editStartDate" class="form-label">Start Date <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="editStartDate" name="startDate" required>
                                <div class="invalid-feedback">Please select a start date.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="editExpiryDate" class="form-label">Expiry Date <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="editExpiryDate" name="expiryDate" required>
                                <div class="invalid-feedback">Please select an expiry date.</div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editMinPrice" class="form-label">Minimum Price (₹) <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="editMinPrice" name="minPrice" min="0" required>
                                <div class="form-text">Minimum order value required</div>
                                <div class="invalid-feedback">Enter a non-negative minimum price.</div>
                            </div>
                            <div class="col-md-6">
                                <label for="editOfferPrice" class="form-label">Offer Price (₹) <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="editOfferPrice" name="offerPrice" min="0" required>
                                <div class="form-text">Discount amount provided</div>
                                <div class="invalid-feedback">Enter a non-negative offer price.</div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label">Use Type <span class="text-danger">*</span></label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="editUsageType" id="editSingleUse" value="single" required>
                                    <label class="form-check-label" for="editSingleUse">Single Use</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="editUsageType" id="editReusable" value="reusable" required>
                                    <label class="form-check-label" for="editReusable">Reusable</label>
                                </div>
                                <div class="invalid-feedback">Select a use type.</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Status <span class="text-danger">*</span></label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="editStatus" id="editStatusActive" value="active" required>
                                    <label class="form-check-label" for="editStatusActive">Active</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="editStatus" id="editStatusInactive" value="inactive" required>
                                    <label class="form-check-label" for="editStatusInactive">Inactive</label>
                                </div>
                                <div class="invalid-feedback">Select a status.</div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Update Coupon</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Scripts retained as before -->
    <script>
    (function() {
        'use strict';
        window.addEventListener('load', () => {
          const form = document.getElementById('addCouponForm');
          form.addEventListener('submit', e => {
            if (!form.checkValidity() || !validateDates()) {
              e.preventDefault();
              e.stopPropagation();
            }
            form.classList.add('was-validated');
          });
        });

        function validateDates() {
          const start = new Date(document.getElementById('startDate').value);
          const end = new Date(document.getElementById('expiryDate').value);
          if (end <= start) {
            alert('Expiry date must be after the start date.');
            return false;
          }
          return true;
        }

        const modalEl = document.getElementById('addCouponModal');
        modalEl.addEventListener('hidden.bs.modal', () => {
          const form = document.getElementById('addCouponForm');
          form.reset();
          form.classList.remove('was-validated');
        });

        document.addEventListener('DOMContentLoaded', function() {
          if (document.getElementById('startDate')) {
            const today = new Date();
            const todayFormatted = today.toISOString().split('T')[0];
            document.getElementById('startDate').value = todayFormatted;
            const expiry = new Date(); expiry.setDate(expiry.getDate() + 30);
            document.getElementById('expiryDate').value = expiry.toISOString().split('T')[0];
          }
        });
    })();
    </script>

    <script>
    function openEditModal(couponId, name, code, description, startDate, expiryDate, minPrice, offerPrice, usageType, status) {
      document.getElementById('editCouponId').value = couponId;
      document.getElementById('editCouponName').value = name;
      document.getElementById('editCouponCode').value = code;
      document.getElementById('editCouponDescription').value = description || '';
      const startDateObj = new Date(startDate);
      const expiryDateObj = new Date(expiryDate);
      document.getElementById('editStartDate').value = startDateObj.toISOString().split('T')[0];
      document.getElementById('editExpiryDate').value = expiryDateObj.toISOString().split('T')[0];
      document.getElementById('editMinPrice').value = minPrice;
      document.getElementById('editOfferPrice').value = offerPrice;
      if (usageType === 'single-use') document.getElementById('editSingleUse').checked = true;
      else document.getElementById('editReusable').checked = true;
      if (status === 'Active') document.getElementById('editStatusActive').checked = true;
      else document.getElementById('editStatusInactive').checked = true;
      const editModal = new bootstrap.Modal(document.getElementById('editCouponModal'));
      editModal.show();
    }
    function validateEditDates() {
      const start = new Date(document.getElementById('editStartDate').value);
      const end = new Date(document.getElementById('editExpiryDate').value);
      if (end <= start) {
        Swal.fire({ title: 'Invalid Dates!', text: 'Expiry date must be after the start date.', icon: 'warning', confirmButtonColor: '#3085d6' });
        return false;
      }
      return true;
    }
    </script>

    <script>
    // Updated form submissions retained exactly as before
    document.addEventListener('DOMContentLoaded', function() {
      const addCouponForm = document.getElementById('addCouponForm');
      if (addCouponForm) {
        addCouponForm.addEventListener('submit', function(e) {
          e.preventDefault();
          if (!addCouponForm.checkValidity() || !validateDates()) { e.stopPropagation(); addCouponForm.classList.add('was-validated'); return; }
          const formData = new FormData(addCouponForm);
          fetch('/admin/coupons', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'X-Requested-With': 'XMLHttpRequest' },
            body: new URLSearchParams(formData)
          })
          .then(response => { if (!response.ok) throw new Error('Network response was not ok'); return response.json(); })
          .then(data => {
            if (data.success) {
              Swal.fire({ title: 'Success!', text: data.message, icon: 'success', confirmButtonColor: '#28a745' })
                .then(() => { window.location.reload(); });
              const modal = bootstrap.Modal.getInstance(document.getElementById('addCouponModal'));
              modal.hide();
            } else {
              Swal.fire({ title: 'Error!', text: data.message || 'An error occurred', icon: 'error', confirmButtonColor: '#dc3545' });
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire({
              title: 'Error!', text: 'Something went wrong with the request. The coupon may have been saved, please refresh to check.',
              icon: 'warning', confirmButtonColor: '#ffc107'
            }).then(() => { window.location.reload(); });
          });
          addCouponForm.classList.add('was-validated');
        });
      }
      const editForm = document.getElementById('editCouponForm');
      if (editForm) {
        editForm.addEventListener('submit', function(e) {
          e.preventDefault();
          if (!editForm.checkValidity()) { e.stopPropagation(); editForm.classList.add('was-validated'); return; }
          if (!validateEditDates()) return;
          const formData = new FormData(editForm);
          fetch('/admin/coupons/update', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'X-Requested-With': 'XMLHttpRequest' },
            body: new URLSearchParams(formData)
          })
          .then(response => { if (!response.ok) throw new Error('Network response was not ok'); return response.json(); })
          .then(data => {
            if (data.success) {
              Swal.fire({ title: 'Success!', text: data.message, icon: 'success', confirmButtonColor: '#28a745' })
                .then(() => { window.location.reload(); });
              const modal = bootstrap.Modal.getInstance(document.getElementById('editCouponModal'));
              if (modal) modal.hide();
            } else {
              Swal.fire({ title: 'Error!', text: data.message || 'An error occurred', icon: 'error', confirmButtonColor: '#dc3545' });
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire({
              title: 'Notice', text: 'The request encountered an issue, but the coupon may have been updated. The page will refresh to confirm.',
              icon: 'warning', confirmButtonColor: '#ffc107'
            }).then(() => { window.location.reload(); });
          });
        });
      }
      const urlParams = new URLSearchParams(window.location.search);
      const success = urlParams.get('success');
      const error = urlParams.get('error');
      if (success) {
        Swal.fire({ title: 'Success!', text: decodeURIComponent(success), icon: 'success', confirmButtonColor: '#28a745', timer: 3000 });
      } else if (error) {
        Swal.fire({ title: 'Error!', text: decodeURIComponent(error), icon: 'error', confirmButtonColor: '#dc3545', timer: 3000 });
      }
      if (success || error) {
        const url = new URL(window.location.href);
        url.searchParams.delete('success');
        url.searchParams.delete('error');
        window.history.replaceState({}, '', url);
      }
      initializeDateValidation();
    });

    function validateDates() {
      const start = new Date(document.getElementById('startDate').value);
      const end = new Date(document.getElementById('expiryDate').value);
      if (end <= start) {
        Swal.fire({ title: 'Invalid Dates!', text: 'Expiry date must be after the start date.', icon: 'warning', confirmButtonColor: '#3085d6' });
        return false;
      }
      return true;
    }

    function handleCouponOperation(url, successMessage) {
      fetch(url, { method: 'GET', headers: { 'X-Requested-With': 'XMLHttpRequest' } })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({ title: 'Success!', text: data.message, icon: 'success', confirmButtonColor: '#28a745' })
            .then(() => { window.location.reload(); });
        } else {
          Swal.fire({ title: 'Error!', text: data.message, icon: 'error', confirmButtonColor: '#dc3545' });
        }
      })
      .catch(error => {
        Swal.fire({ title: 'Error!', text: 'Something went wrong!', icon: 'error', confirmButtonColor: '#dc3545' });
        console.error('Error:', error);
      });
    }

    function confirmActivate(couponId, couponCode) {
      Swal.fire({
        title: 'Activate Coupon',
        text: `Are you sure you want to activate coupon \"${couponCode}\"?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, activate it!',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          handleCouponOperation(`/admin/coupons/activate/${couponId}`, `Coupon ${couponCode} activated successfully!`);
        }
      });
    }
    function confirmDeactivate(couponId, couponCode) {
      Swal.fire({
        title: 'Deactivate Coupon',
        text: `Are you sure you want to deactivate coupon \"${couponCode}\"?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, deactivate it!',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          handleCouponOperation(`/admin/coupons/deactivate/${couponId}`, `Coupon ${couponCode} deactivated successfully!`);
        }
      });
    }
    function confirmDelete(couponId, couponCode) {
      Swal.fire({
        title: 'Delete Coupon',
        text: `Are you sure you want to delete coupon \"${couponCode}\"? This action cannot be undone.`,
        icon: 'error',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          handleCouponOperation(`/admin/coupons/delete/${couponId}`, `Coupon ${couponCode} deleted successfully!`);
        }
      });
    }
    function initializeDateValidation() {
      if (document.getElementById('startDate')) {
        const today = new Date();
        document.getElementById('startDate').value = today.toISOString().split('T')[0];
        const expiry = new Date();
        expiry.setDate(expiry.getDate() + 30);
        document.getElementById('expiryDate').value = expiry.toISOString().split('T')[0];
      }
    }
    </script>

    <script>
    // Responsive Sidebar Toggle Functionality
    (function() {
        const hamburger = document.getElementById('sidebarHamburger');
        const screenOverlay = document.getElementById('sidebarOverlay');
        const navbarAside = document.getElementById('offcanvas_aside');
        const mainWrap = document.getElementById('mainWrap');

        function openSidebar() {
            navbarAside.classList.add('show');
            screenOverlay.classList.add('active');
            mainWrap.classList.add('dimmed');
            hamburger.setAttribute('aria-expanded', 'true');
            document.body.style.overflow = 'hidden';
        }

        function closeSidebar() {
            navbarAside.classList.remove('show');
            screenOverlay.classList.remove('active');
            mainWrap.classList.remove('dimmed');
            hamburger.setAttribute('aria-expanded', 'false');
            document.body.style.overflow = '';
        }

        // Hamburger button click
        hamburger.addEventListener('click', function() {
            if (navbarAside.classList.contains('show')) {
                closeSidebar();
            } else {
                openSidebar();
            }
        });

        // Overlay click to close sidebar
        screenOverlay.addEventListener('click', closeSidebar);

        // ESC key to close sidebar
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape' && navbarAside.classList.contains('show')) {
                closeSidebar();
            }
        });

        // Close sidebar on window resize to desktop
        window.addEventListener('resize', function() {
            if (window.innerWidth >= 992) {
                closeSidebar();
            }
        });

        // Close sidebar when clicking on menu links (mobile)
        const menuLinks = document.querySelectorAll('.menu-aside .menu-link');
        menuLinks.forEach(link => {
            link.addEventListener('click', function() {
                if (window.innerWidth < 992) {
                    closeSidebar();
                }
            });
        });
    })();
    </script>

    <script>
    $(document).ready(function () {
      // Remove old sidebar toggle logic since we have new responsive implementation
      // $('.btn-aside-minimize, .btn-mobile').on('click', function () {
      //   $('#offcanvas_aside').toggleClass('show');
      //   $('body').toggleClass('sidebar-open');
      // });

      // Close sidebar if click outside (keep this for compatibility)
      $(document).on('click', function (e) {
        if (!$(e.target).closest('#offcanvas_aside, .btn-aside-minimize, .btn-mobile, .hamburger-btn').length) {
          if ($('#offcanvas_aside').hasClass('show')) {
            $('#offcanvas_aside').removeClass('show');
            $('body').removeClass('sidebar-open');
          }
        }
      });
    });
    </script>

<script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="/assets/js/vendors/select2.min.js"></script>
<script src="/assets/js/vendors/perfect-scrollbar.js"></script>
<script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>


</body>
</html>