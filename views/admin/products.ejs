<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Shoestore Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="assets2/imgs/theme/favicon.svg">
    <!-- Bootstrap CSS - Added for modal functionality -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome - Added for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Template CSS -->
    <link href="/assets2/css/main.css" rel="stylesheet"/>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .navbar-aside {
            width: 280px;
            height: 100%;
            position: fixed;
            top: 0;
            left: 0;
            background: #fff;
            z-index: 1000;
            transition: all 0.3s ease;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .main-wrap {
            margin-left: 280px;
            transition: all 0.3s ease;
        }
        .screen-overlay {
            width: 100%;
            height: 100%;
            z-index: 999;
            position: fixed;
            top: 0;
            left: 0;
            background: rgba(0,0,0,0.5);
            display: none;
        }
        @media (max-width: 991px) {
            .navbar-aside {
                transform: translateX(-100%);
            }
            .main-wrap {
                margin-left: 0;
            }
            .navbar-aside.show {
                transform: translateX(0);
            }
        }
        .btn-offer {
            background-color: #17a2b8;
            border-color: #17a2b8;
            color: white;
        }
        .btn-offer:hover {
            background-color: #138496;
            border-color: #117a8b;
            color: white;
        }
    </style>
</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="/admin/dashboard" class="brand-wrap">
                <img src="/assets/imgs/theme/shoestore-logo.svg" class="logo" alt="Shoestore Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="/admin/dashboard"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/category"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Categories</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/products"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Products</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/users"> <i class="icon material-icons md-store"></i>
                        <span class="text">Customers</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/orders"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Orders</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/coupons"> <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Coupons</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-person"></i>
                        <span class="text">Refund/Return</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/reviews"> <i class="icon material-icons md-comment"></i>
                        <span class="text">Reviews</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/Sales"> <i class="icon material-icons md-stars"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/logout"> <i class="icon material-icons md-exit_to_app"></i>
                        <span class="text">Sign Out</span>
                    </a>
                </li>
            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform" id="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" id="searchQuery" name="searchQuery" class="form-control" placeholder="Search...">
                        <button class="btn btn-light bg" type="submit"> <i class="material-icons md-search"></i></button>
                    </div>
                </form>
            </div>
            
        </header>
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Products</h2>
                    <p>Manage your products</p>
                </div>
                <div>
                    <a href="/admin/addProducts" class="btn btn-primary">
                        <i class="material-icons md-add"></i> Add Product
                    </a>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                  
                                    <th>Product ID</th>
                                    <th>Name</th>
                                    <th>Category</th>
                                    <th>Price</th>
                                    <!-- <th>Stock</th> -->
                                    <th>Sizes</th>
                                    <th>Status</th>
                                    <th>Offer</th>
                                    <th class="text-end">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% products.forEach((product) => { %>
                                <tr>
                                   
                                    <td><%= product.productId %></td>
                                    <td><b><%= product.productName %></b></td>
                                    <td><%= product.category?.name %></td>
                                    <td>â‚¹<%= product.salePrice %></td>
                                    <!-- <td><%= product.quantity %></td> -->
                                    <td>
                                        <% if (product.shoeSizes) { %>
                                            <% 
                                            let availableSizes = [];
                                            for (let i = 1; i <= 10; i++) {
                                                const sizeValue = typeof product.shoeSizes.get === 'function' 
                                                    ? product.shoeSizes.get(i.toString()) 
                                                    : product.shoeSizes[i];
                                                    
                                                if (sizeValue > 0) {
                                                    availableSizes.push(i);
                                                }
                                            }
                                            %>
                                            <%= availableSizes.length > 0 ? availableSizes.join(', ') : 'None' %>
                                        <% } else { %>
                                            None
                                        <% } %>
                                    </td>
                                    <td>
                                        <span class="<%= product.isListed ? 'text-success' : 'text-danger' %>">
                                            <%= product.isListed ? 'Active' : 'Inactive' %>
                                        </span>
                                    </td>
                                    <td>
                                         <!-- Offer Button -->
                                        <button class="btn btn-offer btn-sm" onclick="openOfferModal('<%= product._id %>', '<%= product.productName %>', '<%= product.productOffer %>')">
                                            <i class="fas fa-tags me-1"></i>Offer
                                        </button>
                                    </td>
                                    <td class="text-end">
                                        <a href="/admin/edit-product/<%= product._id %>" class="btn btn-primary btn-sm me-2">
                                            <i class="material-icons md-edit"></i> Edit
                                        </a>
                                        <% if (product.isListed) { %>
                                            <button onclick="toggleProductStatus('<%= product._id %>', false)" class="btn btn-warning btn-sm me-2">
                                                <i class="material-icons md-block"></i>  Block
                                            </button>
                                        <% } else { %>
                                            <button onclick="toggleProductStatus('<%= product._id %>', true)" class="btn btn-success btn-sm me-2">
                                                <i class="material-icons md-check_circle"></i> Unblock
                                            </button>
                                        <% } %>
                                        <!-- <button onclick="deleteProduct('<%= product._id %>')" class="btn btn-danger btn-sm">
                                            <i class="material-icons md-delete"></i> Delete
                                        </button> -->
                                    </td>
                                </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
             <div class="modal fade" id="offerModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-tags me-2"></i>Manage Product Offer
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <strong>Product:</strong> <span id="offerProductName"></span>
                    </div>
                    <div class="mb-3">
                        <label for="discountPercentage" class="form-label">Discount Percentage (%)</label>
                        <input type="number" class="form-control" id="discountPercentage" min="0" max="100" step="0.01">
                        <div class="form-text">Enter 0 to remove offer</div>
                    </div>
                    <div class="alert alert-info" id="currentOfferInfo" style="display: none;">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Current Offer:</strong> <span id="currentOfferText"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success" onclick="applyOffer()">
                        <i class="fas fa-check me-1"></i>Apply Offer
                    </button>
                    <button type="button" class="btn btn-danger" onclick="removeOffer()">
                        <i class="fas fa-times me-1"></i>Remove Offer
                    </button>
                </div>
            </div>
        </div>
    </div>
            <!-- Pagination -->
            <div class="pagination-container mt-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <% if (currentPage > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="/admin/products?page=<%= currentPage - 1 %>" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        <% } %>
                        
                        <% for(let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                <a class="page-link" href="/admin/products?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                        
                        <% if (currentPage < totalPages) { %>
                            <li class="page-item">
                                <a class="page-link" href="/admin/products?page=<%= currentPage + 1 %>" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
                <div class="text-center mt-2">
                    <small class="text-muted">Showing <%= (currentPage - 1) * 10 + 1 %> to <%= Math.min(currentPage * 10, totalProducts) %> of <%= totalProducts %> products</small>
                </div>
            </div>
        </section>
    </main>

    <!-- Bootstrap JS - Added for modal functionality -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        let currentProductId;
        let offerModal;
        
        // Sidebar toggle functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Bootstrap modal
            offerModal = new bootstrap.Modal(document.getElementById('offerModal'));
            
            const btnMobile = document.querySelector('.btn-mobile');
            const screenOverlay = document.querySelector('.screen-overlay');
            const navbarAside = document.querySelector('.navbar-aside');

            // Only add event listeners if elements exist
            if (btnMobile) {
                btnMobile.addEventListener('click', function() {
                    navbarAside.classList.toggle('show');
                    screenOverlay.style.display = navbarAside.classList.contains('show') ? 'block' : 'none';
                });
            }

            if (screenOverlay) {
                screenOverlay.addEventListener('click', function() {
                    navbarAside.classList.remove('show');
                    screenOverlay.style.display = 'none';
                });
            }

            // Handle window resize
            window.addEventListener('resize', function() {
                if (window.innerWidth > 991) {
                    navbarAside.classList.remove('show');
                    screenOverlay.style.display = 'none';
                }
            });
        });

        async function toggleProductStatus(productId, isListed) {
            try {
                Swal.fire({
                    title: 'Are you sure?',
                    text: `Do you want to ${isListed ? 'unblock' : 'block'} this product?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: `Yes, ${isListed ? 'unblock' : 'block'} it!`
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const url = isListed ? '/admin/listProduct' : '/admin/unlistProduct';
                        const response = await fetch(`${url}?productId=${productId}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
                        const data = await response.json();
                        
                        if (response.ok) {
                            Swal.fire({
                                title: 'Success!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    }
                });
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while updating product status',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
        
        function deleteProduct(productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/deleteProduct?productId=${productId}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Deleted!',
                                text: data.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: data.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while deleting the product',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
                }
            });
        }

        // Fixed search form event listener
        const searchForm = document.getElementById('searchform');
        if (searchForm) {
            searchForm.addEventListener("submit", function(e) {
                e.preventDefault();
                const searchQuery = document.getElementById("searchQuery").value;
                window.location.href = `/admin/products?search=${encodeURIComponent(searchQuery)}`;
            });
        }

        function openOfferModal(productId, productName, currentOffer) {
            currentProductId = productId;
            document.getElementById('offerProductName').textContent = productName;
            document.getElementById('discountPercentage').value = currentOffer || '';
            
            const currentOfferInfo = document.getElementById('currentOfferInfo');
            const currentOfferText = document.getElementById('currentOfferText');
            
            if (currentOffer && currentOffer > 0) {
                currentOfferText.textContent = `${currentOffer}% discount active`;
                currentOfferInfo.style.display = 'block';
            } else {
                currentOfferInfo.style.display = 'none';
            }
            
            if (offerModal) {
                offerModal.show();
            }
        }

        async function applyOffer() {
            const discountPercentage = document.getElementById('discountPercentage').value;
            
            if (!discountPercentage || discountPercentage < 0 || discountPercentage > 100) {
                alert('Please enter a valid discount percentage between 0 and 100');
                return;
            }

            try {
                const response = await fetch('/admin/products/apply-offer', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        productId: currentProductId,
                        discountPercentage: parseFloat(discountPercentage)
                    })
                });

                const result = await response.json();
                
                if (result.success) {
                    alert('Offer applied successfully!');
                    if (offerModal) {
                        offerModal.hide();
                    }
                    location.reload();
                } else {
                    alert('Error: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to apply offer. Please try again.');
            }
        }

        async function removeOffer() {
            if (!confirm('Are you sure you want to remove this offer?')) {
                return;
            }

            try {
                const response = await fetch('/admin/products/remove-offer', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        productId: currentProductId ? currentProductId : ''
                    })
                });

                const result = await response.json();
                
                if (result.success) {
                    alert('Offer removed successfully!');
                    if (offerModal) {
                        offerModal.hide();
                    }
                    location.reload();
                } else {
                    alert('Error: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to remove offer. Please try again.');
            }
        }
    </script>
</body>
</html>